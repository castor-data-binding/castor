<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
     "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">

<section id="jdo.howto.cascade-deletion">
	<sectioninfo>
		<title>How to cascade deletion</title>
<!--
		<abstract>
		    <para>
			    Describes the various possibilities Castor provides to cascade deletion
			</para>
		</abstract>
		<status>Draft</status>
-->
    </sectioninfo>

	<title>How to cascade deletion</title>

	<section id="jdo.howto.cascade-deletion.overview">
	    <title>Overview</title>

		<para>
		    If you enable cascading deletion on a relationship, deleting the object 
		    on one end of the relationship (i.e. calling db.remove() on the object) 
		    will also delete the object on the other end.
		</para>
	</section>

	<section id="jdo.howto.cascade-deletion.enable">
	    <title>Enabling cascading deletion</title>

		<para>
		    To enable cascading deletion on a relationship you simply set the cascading 
		    attribute of the <literal>&lt;sql&gt;</literal> field describing the 
		    relation to "<literal>delete</literal>" (or "<literal>all</literal>"):
		</para>

		<programlisting language="xml"><![CDATA[
		
<field name="book" type="myapp.Book" >
  <sql name="book_id" cascading="delete" />
</field>
]]>     </programlisting>

	    <para>
	        In case of bidirectional relationships, be aware that it matters on which 
	        end you enable cascading deletion. It is also possible to enable it on 
	        both ends.
	    </para>
	</section>

	<section id="jdo.howto.cascade-deletion.scenarios">
	    <title>Scenarios</title>

		<para></para>

		<section id="jdo.howto.cascade-deletion.scenarios.db-remove">
		    <title>db.remove()</title>

			<para>
			    Let's say we have the objects Author and Book and they are in a 
			    one-to-one relationship, with every <classname>Book</classname> 
			    having exactly one <classname>Author</classname>. The database looks 
			    like this:
			</para>

			<table frame="all" cellspacing="0" cellpadding="6">
			    <?dbhtml bgcolor="#ededed" ?>
			
			    <title>Author</title>
							
				<tgroup cols="2">
				    <thead>
						<row>
						    <?dbhtml bgcolor="#7270c2" ?>
							<entry>id</entry>
							<entry>name</entry>
						</row>
					</thead>
					
					<tbody>
						<row>
                            <?dbhtml bgcolor="#DEDEDE" ?>
							<entry>1</entry>
							<entry>"John Jackson"</entry>
						</row>
					</tbody>
				</tgroup>
			</table>

			<table frame="all" cellspacing="0" cellpadding="6">
			    <?dbhtml bgcolor="#ededed" ?>
			
			    <title>Book</title>
						
				<tgroup cols="3">
				    <thead>
						<row>
						    <?dbhtml bgcolor="#7270c2" ?>
							<entry>id</entry>
							<entry>title</entry>
							<entry>author_id</entry>
						</row>
				    </thead>
				    
				    <tbody>
						<row>
                            <?dbhtml bgcolor="#DEDEDE" ?>
							<entry>1</entry>
							<entry>"My Life"</entry>
							<entry>1</entry>
						</row>
					</tbody>
				</tgroup>
			</table>
				
			<para>Now, since we specified the relationship to cascade deletion, if we remove the book, 
				the author gets removed too (after all, an author without a book isn't really an author).</para>

			<programlisting language="java"><![CDATA[
			
db.begin();

Book b1 = db.load(Book.class, 1);
db.remove(db1);

db.commit();]]>
            </programlisting>

			<para>Afterwards, the database predictably looks like this:</para>

			<table frame="all" cellspacing="0" cellpadding="6">
			    <?dbhtml bgcolor="#ededed" ?>
			    
			    <title>Author</title>
							
				<tgroup cols="2">
				    <colspec colname="c1" />
				    <colspec colname="c2" />
				
				    <thead>
						<row>
						    <?dbhtml bgcolor="#7270c2" ?>
							<entry>id</entry>
							<entry>name</entry>
						</row>
				    </thead>
				    
				    <tbody>
						<row>
						    <?dbhtml bgcolor="#DEDEDE" ?>
							<entry namest="c1" nameend="c2">(empty table)</entry>
						</row>
					</tbody>
				</tgroup>
			</table>

			<table frame="all" cellspacing="0" cellpadding="6">
			    <?dbhtml bgcolor="#ededed" ?>
			
			    <title>Book</title>
							
				<tgroup cols="3">
				    <colspec colname="c1" />
				    <colspec colname="c2" />
				    <colspec colname="c3" />
				
				    <thead>
						<row>
						    <?dbhtml bgcolor="#7270c2" ?>
							<entry>id</entry>
							<entry>title</entry>
							<entry>author_id</entry>
						</row>
					</thead>
					
					<tbody>
						<row>
						    <?dbhtml bgcolor="#DEDEDE" ?>
							<entry namest="c1" nameend="c3">(empty table)</entry>
						</row>
					</tbody>
				</tgroup>
			</table>
				
			<para>Cascading the deletion of objects in to-many relationships works in exactly the same way.</para>
				
			<para>Note: You need to explicitly invoke db.remove() to delete an object. Simply setting a relational property to NULL
				or removing an item from a collection will not remove the corresponding entity from the database, even with cascading
				deletion enabled.</para>

		</section>
	</section>

	<section id="jdo.howto.cascade-deletion.see-also">
	    <title>See also</title>

		<itemizedlist>
			<listitem>
			    <para>
					<link linkend="jdo.howto.use-cascading-operations.overview">How to use 
					cascading operations - overview</link>
			    </para>
			</listitem>
		</itemizedlist>

	</section>
</section>