Index: doc/download.xml
===================================================================
--- doc/download.xml	(revision 6713)
+++ doc/download.xml	(working copy)
@@ -5,7 +5,7 @@
     <title>Download instructions &amp; dependencies</title>
     <author email="werner DOT guttmann AT gmx DOT net">Werner Guttmann</author>
     <abstract>
-      Outlines how to downlaod Castor JArs and explains dependencies to third-party
+      Outlines how to download Castor JARs, explains dependencies on third-party
       products.
     </abstract>
     <status>Final</status>
@@ -60,7 +60,7 @@
 
         <section title="XML code generation -- Ant task">
           <ul>
-            <li>Ant task definition for the source generator<br/>
+            <li>Ant task definition for the code generator<br/>
               <url>http://dist.codehaus.org/castor/$STABLE_VERSION$/castor-$STABLE_VERSION$$STABLE_RELEASE$-srcgen-ant-task.jar</url>
               <br/>&#xA0;
             </li>
@@ -70,7 +70,7 @@
         <section title="Samples">
           <ul>
             <li>
-              Self-executable JDO examples using Apache Derby (big)<br/>
+              Self-executing JDO examples using Apache Derby (big)<br/>
               <url>http://dist.codehaus.org/castor/$STABLE_VERSION$/castor-$STABLE_VERSION$$STABLE_RELEASE$-examples.zip</url>
               <br/>&#xA0;
             </li>
@@ -115,50 +115,51 @@
 -->
 
          <p>
-           <small>The tarball and zips includes all the JARs required by Castor, the
-           docs and API JavaDocs. To fully install Castor, simply extract all the JARs
-           into your classpath.</small>
+           <small>The tarball and zips include all the JARs required by Castor,
+           the docs, and the API JavaDocs. To fully install Castor, simply
+           extract all the JARs into your classpath.</small>
          </p>
 
          <p>
-           <small>The SVN snapshot includes additional JARs required to build Castor.
-           It is self sufficient and does not require any external components except
-           for javac.</small>
+           <small>The SVN snapshot includes additional JARs required to build
+           Castor. It is self-sufficient and does not require any external
+           components other than javac.</small>
          </p>
 
          <p>
-           <small>The documentation set includes JavaDocs for the full source code,
-           including class usage. A small documentation set without the full source
-           JavaDocs is available in the tarball and zips.</small>
+           <small>The documentation set includes JavaDocs for the full source
+           code, documenting class usage. A small documentation set without the
+           full source JavaDocs is available in the tarball and zips.</small>
          </p>
 
          <p>
-           <small>All the JARs included with Castor and used for building Castor
-           are available for distribution free of charge, subject to the respective
-           license agreements.</small>
+           <small>All of the JARs included with Castor (used for building
+           Castor) are available for distribution free of charge, subject to
+           the respective license agreements.</small>
          </p>
 
          <p>
-           <small>All implementation JARs (i.e. non APIs) are available under an
-           open source license and available from our FTP server.
-           Open source licenses in use include Apache (ASF), Exolab, Mozilla (MPL),
-           and public domain. All licenses are fully compatible with each other.</small>
+           <small>All implementation JARs (i.e. not APIs) are available under
+           an open source license and available from our FTP server.  Open
+           source licenses in use include Apache (ASF), Exolab, Mozilla (MPL),
+           and public domain. All licenses are fully compatible with each
+           other.</small>
          </p>
 
          <p>
-           <small>The example JAR includes fully functional samples that demonstrate the use
-           of various features of Castor, including marshaling and unmarshaling to/from XML,
-           data persistence using JDO, and source code generation from an XML Schema instance.
-           </small>
+           <small>The example JAR includes fully functional samples that
+           demonstrate the use of various features of Castor -- including
+           marshaling and unmarshaling to and from XML, data persistence using
+           JDO, and source code generation from an XML Schema instance.</small>
          </p>
 
          <p>
-           <small>The example wep application (in form of a WAR archive) includes fully
-           functional samples that demonstrate the use of Castor from within a standard
-           J2EE web application. The WAR file can be deployed to any J2EE compliant web
-           application container (including amongst others Tomcat, WebSphere, JBoss, Weblogic,
-           etc.) using the standard way of deployment of your web application server.
-           </small>
+           <small>The example web application (in form of a WAR archive)
+           includes fully functional samples that demonstrate the use of Castor
+           from within a standard J2EE web application. The WAR file can be
+           deployed to any J2EE compliant web application container (including,
+           amongst others, Tomcat, WebSphere, JBoss, and Weblogic) using the
+           standard deployment method of your web application server.</small>
          </p>
 
       </section>
@@ -170,7 +171,7 @@
             <b>Release date: $RELEASE_DATE$</b>
 
             <li><a href="release-notes.xml">What changed?</a></li>
-          </ul>  
+          </ul>
 
         <section title="Binaries">
 
@@ -201,23 +202,24 @@
               <br/>&#xA0;
             </li>
           </ul>
-            
-          <p><font color="red"><b>*** Note ***</b></font>: Please note that the Castor 
-             XML (and JDO) JARs do not include the code for the DDL generator, XML code 
-             generator and Ant task for the latter anymore. In other words, if you want to be 
-             using both Castor XML (for XML data binding operations, i.e. marshalling and 
-             unmarshalling) and the XML code generator for Java code generation from an 
-             XML schema, you will have to download both JARs in this case. If you want 
-             use the Ant task for the XML code generator, please download the JARs for 
-             Castor XML, the XMl code generator and the Ant task definition.</p>
+
+          <p>
+            <font color="red"><b>*** Note ***</b></font>: Please note that the
+            Castor XML and JDO JARs no longer include the code for the DDL
+            generator or XML code generator (and of course still do not include
+            the code for the Ant task for the XML code generator.) In other
+            words, if you want to use the Castor XML Schema code generator or
+            the DDL generator, you will need to download JARs in addition to
+            the JARs you downloaded previously.
+          </p>
 
         </section>
-        
+
         <section title="Download sets">
-        
+
           <ul>
             <li>
-              The Castor JARs, docs, DTDs, command line tools and examples<br/>
+              The Castor JARs, docs, DTDs, command line tools, and examples<br/>
               <url>http://dist.codehaus.org/castor/$VERSION$/castor-$VERSION$$RELEASE$.tgz</url><br/>
               <url>http://dist.codehaus.org/castor/$VERSION$/castor-$VERSION$$RELEASE$.zip</url>
               <br/>&#xA0;
@@ -229,7 +231,7 @@
               <br/>&#xA0;
             </li>
             <li>
-              Full SVN snapshot: all sources, docs, libraries (big)<br/>
+              Full SVN snapshot: All sources, docs, and 3rd party libraries (big)<br/>
               <url>http://dist.codehaus.org/castor/$VERSION$/castor-$VERSION$$RELEASE$-src.tgz</url><br/>
               <url>http://dist.codehaus.org/castor/$VERSION$/castor-$VERSION$$RELEASE$-src.zip</url>
               <br/>&#xA0;
@@ -235,7 +237,7 @@
               <br/>&#xA0;
             </li>
           </ul>
-          
+
         </section>
 
         <section title="Samples">
@@ -241,7 +243,7 @@
         <section title="Samples">
           <ul>
             <li>
-              Self-executable JDO examples using Apache Derby (big)<br/>
+              Self-executing JDO examples using Apache Derby (big)<br/>
               <url>http://dist.codehaus.org/castor/$VERSION$/castor-$VERSION$$RELEASE$-examples.zip</url>
               <br/>&#xA0;
             </li>
@@ -246,7 +248,7 @@
               <br/>&#xA0;
             </li>
             <li>
-              Castor examples -- sources (incl. xml, JDO, source generator)<br/>
+              Castor examples -- sources (incl. XML, JDO, source generator)<br/>
               <url>http://dist.codehaus.org/castor/$VERSION$/castor-$VERSION$$RELEASE$-examples-sources.jar</url>
               <br/>&#xA0;
             </li>
@@ -283,7 +285,7 @@
 </dependency>]]></source>
 
           <p>
-            As we are currently providing snapshot releases only for the factory beans, you will
+            As we currently provide snapshot releases only for the factory beans, you will
             have to add the following <tt>&lt;repository&gt;</tt> element to your POM as well,
             so that Maven 2 knows about the <i>Codehaus Snapshot repository</i> when trying
             to resolve and download dependencies.
@@ -335,7 +337,7 @@
 </dependency>]]></source>
 
           <p>
-            As we are currently providing snapshot releases only for the factory beans, you will
+            As we currently provide snapshot releases only for the factory beans, you will
             have to add the following <tt>&lt;repository&gt;</tt> element to your POM as well,
             so that Maven 2 knows about the <i>Codehaus Snapshot repository</i> when trying
             to resolve and download dependencies.
@@ -435,7 +437,9 @@
       <p>
         JARs required to build Castor and dependencies for various packages are
         contained in the <tt>lib</tt> directory. JARs required for distribution
-        are marked with <b>bold text</b>:
+        are marked with <b>bold text</b>, although many of these JARs are
+        required only if the feature obviously associated with that JAR is
+        used.
       </p>
 
       <ctable cellpadding="4" border="1">
@@ -492,9 +496,9 @@
         </p>
 
         <p>
-          The JDO examples uses <a href="http://db.apache.org/derby">Apache Derby</a> and
-          depends on the JDBC driver provided with the examples archive. This driver is only
-          required for running the samples, and is not required otherwise, especially if you
+          The JDO examples use <a href="http://db.apache.org/derby">Apache Derby</a> and
+          depend on the JDBC driver provided with the examples archive. This driver is only
+          required for running the samples and is not required otherwise, especially if you
           use a different database server.
         </p>
 
Index: doc/jdo-examples.xml
===================================================================
--- doc/jdo-examples.xml	(revision 6713)
+++ doc/jdo-examples.xml	(working copy)
@@ -14,24 +14,29 @@
     </header>
 
     <section title="Introduction">
-        
-       <p>Here are examples of object mappings and the corresponding Java objects and
-          DDL for the database table.</p>
+
+       <p>
+         This document provides object mapping examples and the corresponding
+         Java objects and DDL for the database table.
+       </p>
 
        <section title="Java class files">
-       
-          <p>The following fragment shows the Java class declaration for the Product class:</p>
-       
+
+          <p>
+            The following fragment shows the Java class declaration for the
+            <tt>Product</tt> class:
+          </p>
+
           <code-panel>
 package myapp;
 
-public class Product 
-{
+public class Product {
+
     private int       _id;
 
-    private String    _name; 
+    private String    _name;
 
-    private float     _price; 
+    private float     _price;
 
     private ProductGroup _group;
 
@@ -53,11 +58,13 @@
     public void setProductGroup( ProductGroup aProductGroup ) { ... }
 }</code-panel>
 
-      <p>The following fragment shows the Java class declaration for the ProductGroup class:</p>
-      
+      <p>
+        The following fragment shows the Java class declaration for the
+        <tt>ProductGroup</tt> class:
+      </p>
+
       <code-panel>
-public class ProductGroup
-{
+public class ProductGroup {
 
     private int       _id;
 
@@ -74,17 +81,18 @@
 }</code-panel>
 
       </section>
-        
+
        <section title="DDL">
-       
-          <p>The following sections show the DDL for the relational database tables 
-             PROD, PROD_GROUP and PROD_DETAIL:</p>
-        
-          <p><b>PROD</b>:</p>
-          
+
+          <p>
+            The following sections show the DDL for the relational database
+            tables <tt>PROD</tt>, <tt>PROD_GROUP</tt>, and <tt>PROD_DETAIL</tt>:
+          </p>
+
+          <p><b><tt>PROD</tt></b>:</p>
+
           <code-panel>
-create table prod 
-(
+create table prod (
   id        int           not null,
   name      varchar(200)  not null,
   price     numeric(18,2) not null,
@@ -91,8 +99,8 @@
   group_id  int           not null
 );</code-panel>
 
-          <p><b>PROD_GROUP</b>:</p>
-          
+          <p><b><tt>PROD_GROUP</tt></b>:</p>
+
           <code-panel>
 create table prod_group (
   id        int           not null,
@@ -98,9 +106,9 @@
   id        int           not null,
   name      varchar(200)  not null
 );</code-panel>
-          
-          <p><b>PROD_DETAIL</b>:</p>
-          
+
+          <p><b><tt>PROD_DETAIL</tt></b>:</p>
+
           <code-panel>
 create table prod_detail (
   id        int           not null,
@@ -107,13 +115,16 @@
   prod_id   int           not null,
   name      varchar(200)  not null
 );</code-panel>
-          
+
        </section>
-       
+
        <section title="Object Mappings">
 
-        <p>The following code fragment shows the object mapping for the ProductGroup class:</p>
-           
+        <p>
+          The following code fragment shows the object mapping for the
+          <tt>ProductGroup</tt> class:
+        </p>
+
         <code-panel>
 &lt;?xml version="1.0"?>
 &lt;!DOCTYPE mapping PUBLIC "-//EXOLAB/Castor Object Mapping DTD Version 1.0//EN"
@@ -121,19 +132,19 @@
 &lt;mapping>
 
   &lt;class name="myapp.ProductGroup" identity="id"&gt;
-  
+
     &lt;description&gt;Product group&lt;/description&gt;
-    
+
     &lt;map-to table="prod_group" xml="group" /&gt;
-    
+
     &lt;field name="id" type="integer" &gt;
       &lt;sql name="id" type="integer"/&gt;
     &lt;/field&gt;
-    
+
     &lt;field name="name" type="string"&gt;
       &lt;sql name="name" type="char" /&gt;
     &lt;/field&gt;
-    
+
   &lt;/class>
 
 &lt;/mapping></code-panel>
@@ -138,9 +149,12 @@
 
 &lt;/mapping></code-panel>
 
-       <p>As a result of that declaration, Castor JDO would create the following SQL statements
-          for creating, deleting, loading and updating instances of ProductGroup:</p>
-          
+       <p>
+         As a result of that declaration, Castor JDO will create the following
+         SQL statements for creating, deleting, loading and updating instances
+         of <tt>ProductGroup</tt>:
+       </p>
+
        <code-panel>
 create: INSERT INTO prod_group (id, name) VALUES (?,?)
 delete: DELETE FROM prod_group WHERE id=?
@@ -147,25 +161,30 @@
 load:   SELECT prod_group.id, prod_group.name FROM prod_group WHERE prod_group.id=?;
 update: UPDATE prod_group SET name=? WHERE id=?
        </code-panel>
-          
+
        <section title="Read-only fields">
 
-          <p>To declare the <i>name</i> field <b>read-only</b>, above field definition for the 
-             field <i>name</i> needs to be changed to:</p>
+          <p>
+            To declare the <i>name</i> field <b>read-only</b>, the field
+            definition above for the field <i>name</i> needs to be changed to:
+          </p>
 
           <code-panel>
   &lt;class name="myapp.ProductGroup" identity="id"&gt;
-  
-    ...    
+
+    ...
     &lt;field name="name" type="string"&gt;
       &lt;sql name="name" type="char" <font color="red">read-only="true"</font> /&gt;
     &lt;/field&gt;
-    
+
   &lt;/class></code-panel>
-         
-          <p>As a result of that declaration, Castor JDO creates the following SQL statements
-            for creating, deleting, loading and updating instances of ProductGroup:</p>
-          
+
+          <p>
+            As a result of that declaration, Castor JDO creates the following
+            SQL statements for creating, deleting, loading and updating
+            instances of <tt>ProductGroup</tt>:
+          </p>
+
           <code-panel>
 create: INSERT INTO prod_group (id) VALUES (?)
 delete: DELETE FROM prod_group WHERE id=?
@@ -170,8 +189,8 @@
 create: INSERT INTO prod_group (id) VALUES (?)
 delete: DELETE FROM prod_group WHERE id=?
 load:   SELECT prod_group.id, prod_group.name FROM prod_group WHERE prod_group.id=?;
-update: <i>no statement will be generated</i></code-panel> 
-         
+update: <i>no statement will be generated</i></code-panel>
+
        </section>
 
        <section title="Transient fields">
@@ -176,31 +195,37 @@
 
        <section title="Transient fields">
 
-          <p>To declare the <i>name</i> field <b>transient</b> with regards to persistence, above field 
-             definition for the field <i>name</i> needs to be changed to:</p>
+          <p>
+            To declare the <i>name</i> field <b>transient</b> with regards to
+            persistence, above field definition for the field <i>name</i> needs
+            to be changed to:
+          </p>
 
           <code-panel>
   &lt;class name="myapp.ProductGroup" identity="id"&gt;
-  
-    ...    
+
+    ...
     &lt;field name="name" type="string" &gt;
       &lt;sql name="name" type="char" <font color="red">transient="true"</font> /&gt;
     &lt;/field&gt;
-    
+
   &lt;/class></code-panel>
 
        </section>
-          
+
     </section>
-    
+
     <section title="Relations">
-        
+
        <section title="1:1 relation">
 
-          <p>The following code fragment shows the mapping file for the Product class. 
-             Apart from the simple field declarations, this includes a simple 1:1 relation between 
-             Product and ProductGroup, where every product instance is associated with a 
-             ProductGroup:</p>
+          <p>
+            The following code fragment shows the mapping file for the Product
+            class.  Apart from the simple field declarations, this includes a
+            simple 1:1 relation between <tt>Product</tt> and
+            <tt>ProductGroup</tt>, where every product instance is associated
+            with a <tt>ProductGroup</tt>:
+          </p>
 
           <code-panel>
     &lt;class name="myapp.Product" identity="id"&gt;
@@ -222,7 +247,7 @@
         <font color="red">&lt;field name="group" type="myapp.ProductGroup" &gt;
             &lt;sql name="group_id" /&gt;
         &lt;/field&gt;</font>
-        
+
         &lt;field name="details" type="myapp.ProductDetail"
                collection="vector"&gt;
            &lt;sql many-key="prod_id"/&gt;
@@ -227,7 +252,7 @@
                collection="vector"&gt;
            &lt;sql many-key="prod_id"/&gt;
         &lt;/field&gt;
-        
+
         &lt;field name="categories" type="myapp.Category" collection="vector"&gt;
            &lt;sql name="category_id"
                 many-table="category_prod" many-key="prod_id" /&gt;
@@ -235,13 +260,16 @@
 
     &lt;/class&gt;</code-panel>
        </section>
-       
+
           <section title="1:M relation">
-             <p>The following code fragment shows (again) the mapping file for the Product class. 
-                The field definition highlighted shows how to declare a 1:M relation between 
-                Product and ProductDetail, where every product instance is made up of many 
-                ProductDetails:</p>
-                
+             <p>
+               The following code fragment shows (again) the mapping file for
+               the <tt>Product</tt> class.  The field definition highlighted
+               shows how to declare a 1:M relation between <tt>Product</tt> and
+               <tt>ProductDetail</tt>, where every product instance is made up
+               of many <tt>ProductDetails</tt>:
+             </p>
+
              <code-panel>
     &lt;class name="myapp.Product" identity="id"&gt;
 
@@ -262,7 +290,7 @@
         &lt;field name="group" type="myapp.ProductGroup" &gt;
             &lt;sql name="group_id" /&gt;
         &lt;/field&gt;
-        
+
         <font color="red">&lt;field name="details" type="myapp.ProductDetail" <font color="red">collection="vector"</font>&gt;
            &lt;sql many-key="prod_id"/&gt;
         &lt;/field&gt;</font>
@@ -272,11 +300,14 @@
                 many-table="category_prod" many-key="prod_id" /&gt;
         &lt;/field&gt;
     &lt;/class&gt;</code-panel>
-             
-             <p>The following code fragment shows the corresponding mapping entry for the 
-                ProductDetail class that defines the second leg of the 1:M relation
-                between Product and ProductDetail.</p>
-                
+
+             <p>
+               The following code fragment shows the corresponding mapping
+               entry for the <tt>ProductDetail</tt> class that defines the
+               second leg of the 1:M relation between <tt>Product</tt> and
+               <tt>ProductDetail</tt>.
+             </p>
+
              <code-panel>
   &lt;class name="myapp.ProductDetail" identity="id" depends="myapp.Product" &gt;
 
@@ -297,15 +328,18 @@
     &lt;/field&gt;</font>
 
   %lt;/class&gt;</code-panel>
- 
+
           </section>
-       
+
           <section title="M:N relation">
-             <p>The following code fragment shows (again) the mapping file for the Product class. 
-                The field definition highlighted shows how to declare a M:N relation between 
-                Product and ProductCategory, where many products can be mapped to many 
-                product categories:</p>
-                
+             <p>
+               The following code fragment shows (again) the mapping file for
+               the <tt>Product</tt> class.  The field definition highlighted
+               shows how to declare a M:N relation between <tt>Product</tt> and
+               <tt>ProductCategory</tt>, where many products can be mapped to
+               many product categories:
+             </p>
+
              <code-panel>
     &lt;class name="myapp.Product" identity="id"&gt;
 
@@ -326,7 +360,7 @@
         &lt;field name="group" type="myapp.ProductGroup" &gt;
             &lt;sql name="group_id" /&gt;
         &lt;/field&gt;
-        
+
         &lt;field name="details" type="myapp.ProductDetail" collection="vector"&gt;
            &lt;sql many-key="prod_id">/&gt;
         &lt;/field&gt;
@@ -335,32 +369,35 @@
            &lt;sql name="category_id"
                 many-table="category_prod" many-key="prod_id" /&gt;
         &lt;/field&gt;</font>
-        
+
     &lt;/class&gt;</code-panel>
-             
-             <p>The following code fragment shows the corresponding mapping entry for the 
-                ProductCategory class that defines the second leg of the M:N relation
-                between Product and Category.</p>
+
+             <p>
+               The following code fragment shows the corresponding mapping
+               entry for the <tt>ProductCategory</tt> class that defines the
+               second leg of the M:N relation between <tt>Product</tt> and
+               <tt>Category</tt>.
+             </p>
 
              <code-panel>
   &lt;class name="myapp.Category" identity="id"&gt;
-  
+
     &lt;description&gt;
         A product category, any number of products can belong to
         the same category, a product can belong to any number of
-        categories
+        categories.
     &lt;/description&gt;
-    
+
     &lt;map-to table="category" xml="category" /&gt;
-    
+
     &lt;field name="id" type="integer"&gt;
       &lt;sql name="id" type="integer"/&gt;
     &lt;/field&gt;
-    
+
     &lt;field name="name" type="string"&gt;
       &lt;sql name="name" type="char"/&gt;
     &lt;/field&gt;
-    
+
     <font color="red">&lt;field name="products" type="myapp.Product" collection="vector"&gt;
       &lt;sql name="prod_id"
            many-table="category_prod" many-key="category_id" /&gt;
@@ -365,7 +402,7 @@
       &lt;sql name="prod_id"
            many-table="category_prod" many-key="category_id" /&gt;
     &lt;/field&gt;</font>
-    
+
   &lt;/class&gt;</code-panel>
           </section>
 
@@ -371,19 +408,23 @@
 
        </section>
 
-	    <section title="Extend relation &amp; polymorphism">
-	    
-	    	 <p>As of release 0.9.9, Castor supports polymorphic queries on extend hierarchies. To highlights
-	    	    this new feature, let's add two new classes to what we have currently.</p>
-	    	   
-	    	 <code-panel>
+      <section title="Extend relation &amp; polymorphism">
+
+         <p>
+           As of release 0.9.9, Castor supports polymorphic queries on extend
+           hierarchies.  (That is, hierarchies where some entities "extend"
+           other entities.)  To highlight this new feature, let's add two new
+           classes to what we have currently.
+         </p>
+
+         <code-panel>
 package myapp;
 
-public class <font color="red">Computer extends Product</font>
-{
+public class <font color="red">Computer extends Product</font> {
+
     private int       _id;
 
-    private String    _make; 
+    private String    _make;
 
     public int getId() { ... }
 
@@ -395,11 +436,11 @@
 
 }
 
-public class <font color="red">Car extends Product</font>
-{
+public class <font color="red">Car extends Product</font> {
+
     private int       _id;
 
-    private Date    _registeredIn; 
+    private Date    _registeredIn;
 
     public int getId() { ... }
 
@@ -410,14 +451,15 @@
     public void setRegisteredIn( Date aRegisteredIn ) { ... }
 }</code-panel>
 
-          <p>The corresponding DDL statements for the relational database tables 
-             COMP and CAR would look as follows:</p>
-        
-          <p><b>COMP</b>:</p>
-          
+          <p>
+            The corresponding DDL statements for the relational database tables
+            <tt>COMP</tt> and <tt>CAR</tt> would look as follows:
+          </p>
+
+          <p><b><tt>COMP</tt></b>:</p>
+
           <code-panel>
-create table prod 
-(
+create table prod (
   id        int           not null,
   make      varchar(200)  not null
 );</code-panel>
@@ -422,8 +464,8 @@
   make      varchar(200)  not null
 );</code-panel>
 
-          <p><b>CAR</b>:</p>
-          
+          <p><b><tt>CAR</tt></b>:</p>
+
           <code-panel>
 create table prod_group (
   id        int           not null,
@@ -430,8 +472,11 @@
   regIn     int           not null
 );</code-panel>
 
-             <p>Based upon the mapping defined for the <tt>Product</tt> class as shown above, the 
-          %      following code fragment shows the mapping for Computer and Car classes.</p>
+             <p>
+               Based upon the mapping defined for the <tt>Product</tt> class as
+               shown above, the following code fragment shows the mapping for
+               the <tt>Computer</tt> and <tt>Car</tt> classes.
+             </p>
 
              <code-panel>
     &lt;class name="myapp.Computer" <font color="red">extends="myapp.Product"</font> identity="id"&gt;
@@ -445,9 +490,9 @@
         &lt;field name="make" type="string">
             &lt;sql name="make" type="char" />
         &lt;/field>
-        
+
     &lt;/class&gt;
-    
+
     &lt;class name="myapp.Car" <font color="red">extends="myapp.Product"</font> identity="id"&gt;
 
         &lt;map-to table="CAR" /&gt;
@@ -459,52 +504,62 @@
         &lt;field name="registeredIn" type="date">
             &lt;sql name="regIn" type="long" />
         &lt;/field>
-        
+
     &lt;/class&gt;</code-panel>
-	    
-	    	<p>Based upon this mapping, it is possible to execute the following OQL queries against 
-	    	   this class model.</p>
-	    	   
-	    	<code-panel>
+
+        <p>
+          Based upon this mapping, it is possible to execute the following OQL
+          queries against this class model:
+        </p>
+
+        <code-panel>
 OQLQuery query = d.getOQLQuery("SELECT c FROM <b>myapp.Computer</b> c");
-	    	</code-panel>
-	    	
-	    	<p>to return all computers.</p>
+        </code-panel>
 
-	    	<code-panel>
+        <p>To return all computers:</p>
+
+        <code-panel>
 OQLQuery query = d.getOQLQuery("SELECT c FROM myapp.Computer c WHERE c.make = $");
-	    	</code-panel>
-	    	
-	    	<p>to return all computers of a particular make.</p>
+        </code-panel>
 
-	    	<code-panel>
+        <p>To return all computers of a particular make:</p>
+
+        <code-panel>
 OQLQuery query = d.getOQLQuery("SELECT p FROM <b>myapp.Product</b> p");
-	    	</code-panel>
-	    	
-	    	<p>to return all products (where Castor will return the actual object instances, i.e. a Computer
-	    	   instance if the object returned by the query is of type <tt>Computer</tt>, or a <tt>Car</tt>
-	    	   instance if the object returned by the query is of type <tt>Car</tt>).</p>
+        </code-panel>
 
-	    	<code-panel>
+        <p>
+          To return all products (where Castor will return the actual object
+          instances, i.e. a <tt>Computer</tt> instance if the object returned
+          by the query is of type <tt>Computer</tt> or a <tt>Car</tt> instance
+          if the object returned by the query is of type <tt>Car</tt>):
+        </p>
+
+        <code-panel>
 OQLQuery query = d.getOQLQuery("SELECT p FROM myapp.Product p WHERE p.group.name = $");
-	    	</code-panel>
-	    	
-	    	<p>to return all products that belong to the specified product group (where Castor will 
-	    	   return the actual object instances, i.e. a Computer instance if the object returned by 
-	    	   the query is of type <tt>Computer</tt>, or a <tt>Car</tt>
-	    	   instance if the object returned by the query is of type <tt>Car</tt>).</p>
-	    	
-	    </section>
-	    
-	    <section title="OQL samples">
-	    
-	    	<p>Based upon above definitions, here's a few OQL sample queries highlightig various 
-	    	   artefacts of the OQL support of Castor JDO.</p>
-	    	   
-	    	<p><b>TBD</b></p>
-	    </section>
+        </code-panel>
+
+        <p>
+          To return all products that belong to the specified product group
+          (where Castor will return the actual object instances, i.e. a
+          <tt>Computer</tt> instance if the object returned by the query is of
+          type <tt>Computer</tt> or a <tt>Car</tt> instance if the object
+          returned by the query is of type <tt>Car</tt>):
+        </p>
+
+      </section>
+
+      <section title="OQL samples">
+
+        <p>
+          Based upon above definitions, here are a few OQL sample queries that
+          highlight various artifacts of the OQL support of Castor JDO.
+        </p>
+
+        <p><b><i>To Be Written</i></b></p>
+      </section>
 
     </section>
 
-    </body>
-</document>
\ No newline at end of file
+  </body>
+</document>
Index: doc/jdo-self-executable-examples.xml
===================================================================
--- doc/jdo-self-executable-examples.xml	(revision 6713)
+++ doc/jdo-self-executable-examples.xml	(working copy)
@@ -1,65 +1,77 @@
 <?xml version="1.0" encoding="ISO-8859-1"?>
 <document url="http://castor.codehaus.org/jdo-self-executable-examples.xml">
 
-    <properties>
-        <title>Running the self-executable Castor JDO examples</title>
-        <author email="werner DOT guttmann AT gmx DOT net">Werner Guttmann</author>
-        <abstract>
-            Outlines how to run the self-executable Castor JDO examples.
-        </abstract>
-        <status>Draft</status>
-    </properties>
-    
+  <properties>
+    <title>Running the self-executable Castor JDO examples</title>
+    <author email="werner DOT guttmann AT gmx DOT net">Werner Guttmann</author>
+    <abstract>
+      Outlines how to run the self-executable Castor JDO examples.
+    </abstract>
+    <status>Draft</status>
+  </properties>
+
   <body>
     <title>Running the self-executable Castor JDO examples</title>
 
-    <p>As of release 1.0M3, the Castor JDO examples have been packaged in a 
-       new way and are available for download at the 
-       <a href="download.html">download page</a>. In the following sections, we 
-       explain the steps required to unpack this new archive, and how to execute
-       the tests.</p>
-       
+    <p>
+      As of release 1.0M3, the Castor JDO examples have been packaged in a
+      new way and are available for download at the
+      <a href="download.html">download page</a>. In the following sections, we
+      explain the steps required to unpack this new archive, and how to execute
+      the tests.
+    </p>
+
     <section title="Download the castor-$RELEASE-examples.zip archive">
 
-      <p>In order to be able to run the new Castor JDO examples, please download
-         the new castor-${RELEASE}-examples.zip from the <a href="download.html">download page</a>
-         and put it  into some location on your computer.</p> 
+      <p>
+        In order to be able to run the new Castor JDO examples, please download
+        the new <tt>castor-</tt>${RELEASE}<tt>-examples.zip</tt> from the
+        <a href="download.html">download page</a> and put it into some location
+        on your computer.
+      </p>
 
     </section>
-    
+
     <section title="Unpack the ZIP file">
-        
-        <p>To unpack the ZIP file downloaded, please issue one of the following
-           commands:</p>
-          
-          <code-panel>
-  unzip castor-1.0M3-examples.zip</code-panel> 
+
+      <p>
+        To unpack the ZIP file downloaded, issue one of the following commands:
+      </p>
+
+      <code-panel>
+  unzip castor-1.1M2-examples.zip</code-panel>
 
-          <p>or</p>
+      <p>or</p>
 
-          <code-panel>
-  jar xvf castor-1.0M3-examples.zip</code-panel>
+      <code-panel>
+  jar xvf castor-1.1M2-examples.zip</code-panel>
 
-          <p>You can now run the examples using the directions provided in the 
-             next section.</p>
+      <p>
+        You can now run the examples using the directions provided in the
+        next section.
+      </p>
 
     </section>
-    
+
     <section title="Running the Castor JDO samples">
-    
-        <p>In the directory where you have unpacked the ZIP file downloaded,
-           you'll find a castor-1.0M3-examples.jar. In addition, a directory named
-           'lib' had been created, where you'll find several JAR files required to
-           run the samples.</p> 
-           
-        <p>To execute he samples, please issue the following command:</p>
-        
-        <code-panel>
-  java -jar castor-1.0M3-examples.jar</code-panel>   
-        
-        <p>... et voila ! You'll see various lines of logging output flashing
-           by, whilst the Castor JDO samples are executing against a database.</p>
-           
+
+      <p>
+        In the directory where you have unpacked the ZIP file you'll find a
+        castor-1.1M2-examples.jar. In addition, you'll find a directory named
+        <tt>lib</tt> where you'll find several JAR files required to
+        run the samples.
+      </p>
+
+      <p>To execute the samples, issue the following command:</p>
+
+      <code-panel>
+  java -jar castor-1.1M2-examples.jar</code-panel>
+
+      <p>
+        ... et voila ! You'll see various lines of logging output flashing
+        by whilst the Castor JDO samples are executing against a database.
+      </p>
+
     </section>
 
     <section title="What happens">
@@ -64,17 +76,22 @@
 
     <section title="What happens">
 
-      <p>The Castor JDO sample will test persistence between a set of Java classes
-         (Product, ProductGroup, ProductDetail, etc.) and perform this code
-         against an Apache Derby instance as RDBMS. For this purpose, the 
-         sample code will start an embedded Derby instance on the fly, create the
-         required tables, and then continue to execute several code fragments
-         using various Castor JDO artefacts (JDOManager, Database, etc.) against this
-         embedded database.</p>
-         
-      <p>In other words, everything is self-contained, and there is no need anymore
-         to install a database, create a database schema and all the required tables.
-         Everything required is initiated and setup from within the sample code.</p>
+      <p>
+        The Castor JDO sample will test persistence between a set of Java
+        classes (Product, ProductGroup, ProductDetail, etc.) and perform this
+        code against an Apache Derby instance as RDBMS. For this purpose, the
+        sample code will start an embedded Derby instance on the fly, create
+        the required tables, and then continue to execute several code
+        fragments using various Castor JDO artifacts (JDOManager, Database,
+        etc.) against this embedded database.
+      </p>
+
+      <p>
+        In other words, everything is self-contained and there is no need to
+        install a database, create a database schema, or create database tables.
+        Everything required for the tests is initiated and set up from within
+        the sample code.
+      </p>
 
     </section>
 
@@ -79,13 +96,15 @@
     </section>
 
     <section title="Hints">
-        
-        <ul>
-            <li>If it is not set yet, you might have to set the <tt>JAVA_HOME</tt> 
-                environment variable, and add the $JAVA_HOME/bin directory to
-                your path.</li>
-            
-        </ul>
+
+      <ul>
+        <li>
+          If it is not set yet, you might have to set the <tt>JAVA_HOME</tt>
+          environment variable, and add the $JAVA_HOME/bin directory to
+          your path.
+        </li>
+      </ul>
+
     </section>
 
   </body>
Index: doc/maven-integration.xml
===================================================================
--- doc/maven-integration.xml	(revision 6713)
+++ doc/maven-integration.xml	(working copy)
@@ -17,16 +17,16 @@
 
     <section title="Releases">
 
-		<p>Starting with Castor 1.0.4, the Castor team has started to make <b>selected</b> 
-	       build artefacts of Castor available at the 
-	       <a href="http://repository.codehaus.org/">Codehaus Maven 2 repository</a>.</p>
+    <p>Starting with Castor 1.0.4, the Castor team has started to make <b>selected</b>
+       build artifacts of Castor available at the
+       <a href="http://repository.codehaus.org/">Codehaus Maven 2 repository</a>.</p>
 
-		<p>To include a specific Castor release artefact in your Maven 2 project(s),
-		   please add one of the following Maven 2 dependencies as outlined further 
-		   below to your project POM (replacing <i>1.0.4</i> with the desired 
-		   release number).</p>
+    <p>To include a specific Castor release artifact in your Maven 2 project(s),
+       please add one of the following Maven 2 dependencies as outlined further
+       below to your project POM (replacing <i>1.0.4</i> with the desired
+       release number).</p>
 
-		<code-panel><![CDATA[
+    <code-panel><![CDATA[
 <dependency>
    <groupId>org.codehaus.castor</groupId>
    <artifactId>castor</artifactId>
@@ -33,10 +33,10 @@
    <version>1.0.4</version>
 </dependency>]]></code-panel>
 
-		<p>and make sure you include the Codehaus Maven 2 repository in your
-		   POM similar to ...</p>
+    <p>and make sure you include the Codehaus Maven 2 repository in your
+       POM similar to ...</p>
 
-		<code-panel><![CDATA[
+    <code-panel><![CDATA[
 <repository>
     <id>codehaus-snapshots</id>
     <name>Maven Codehaus Snapshots</name>
@@ -43,30 +43,31 @@
     <url>http://maven.codehaus.org/maven2/</url>
 </repository>]]></code-panel>
 
-		<p>Once a specific Castor release has been propagated to the main Maven 2
-		   repository at <a href="http://www.ibiblio.org/maven2">ibiblio</a> (usually 
-		   within 48 hours), adding just the dependency will be sufficient.</p>
+    <p>Once a specific Castor release has been propagated to the main Maven 2
+       repository at <a href="http://www.ibiblio.org/maven2">ibiblio</a> (usually
+       within 48 hours), adding just the dependency will be sufficient.</p>
+
+  </section>
 
-	</section>
-	
-	<section title="Snapshot releases">
-	
-		<p>As we are working towards new releases, we will try to make snapshot releases 
-		   available as we make progress with existing/newly created Jira 
-		   issues. Please consult with the relevant release section at
-		   the <a href="http://jira.codehaus.org/browse/CASTOR">raodmap</a>
-		   to get an idea what's been fixed as part of a (planned) release.</p>
+  <section title="Snapshot releases">
 
-		<p>As usual, please report any issues with these Maven 2 (snapshot)
-		   releases through <a href="http://jira.codehaus.org/browse/CASTOR">Jira</a>.</p>
+    <p>As we are working towards new releases, we will try to make snapshot releases
+       available as we make progress with existing/newly created Jira
+       issues. Please consult with the relevant release section at
+       the <a href="http://jira.codehaus.org/browse/CASTOR">roadmap</a>
+       to get an idea what's been fixed as part of a (planned) release.</p>
+
+    <p>As usual, please report any issues with these Maven 2 (snapshot)
+       releases through <a href="http://jira.codehaus.org/browse/CASTOR">Jira</a>.</p>
 
     </section>
 
-    <section title="Available release artefacts">
-        
-        <p>The following table summarizes the build artefacts currently available
-           through the <a href="http://repository.codehaus.org/">Codehaus Maven 2 repository</a>.</p>
-           
+    <section title="Available release artifacts">
+
+        <p>The following table summarizes the build artifacts currently available
+           through the <a href="http://repository.codehaus.org/">Codehaus
+           Maven 2 repository</a>.</p>
+
         <ctable>
             <cheader>
                 <th>Description</th>
@@ -81,7 +82,7 @@
    <artifactId>castor</artifactId>
    <version>1.0.4</version>
 </dependency>]]></pre></td>
-				<td>1.0.4</td>
+        <td>1.0.4</td>
             </crow>
             <crow>
                <td>Castor DDL generator</td>
@@ -91,7 +92,7 @@
    <artifactId>castor-ddlgen</artifactId>
    <version>1.1-M2</version>
 </dependency>]]></pre></td>
-				<td>1.1-M2</td>
+        <td>1.1-M2</td>
             </crow>
             <crow>
                <td>Castor XML code generator</td>
@@ -101,7 +102,7 @@
    <artifactId>castor-codegen</artifactId>
    <version>1.1-M2</version>
 </dependency>]]></pre></td>
-				<td>1.1-M2</td>
+        <td>1.1-M2</td>
             </crow>
             <crow>
                <td>Ant task definition for Castor XML code generator</td>
@@ -111,13 +112,13 @@
    <artifactId>castor-codegen-anttask</artifactId>
    <version>1.1-M2</version>
 </dependency>]]></pre></td>
-				<td>1.1-M2</td>
+        <td>1.1-M2</td>
             </crow>
         </ctable>
-        
-        <p>Until these build artefacts have been propagated to the 
+
+        <p>Until these build artifacts have been propagated to the
            <a href="http://www.ibiblio.org/maven2">main Maven 2 repository</a>,
-           please make sure that your project POMS include the following 
+           please make sure that your project POMS include the following
            <tt>&lt;repository&gt;</tt> definition:</p>
 
             <source><![CDATA[
@@ -123,8 +124,8 @@
             <source><![CDATA[
 <repository>
     <id>codehaus-repository</id>
-    <name>Codehaus Maven 2 repository</name> 
-    <url>http://maven.codehaus.org/maven2/</url> 
+    <name>Codehaus Maven 2 repository</name>
+    <url>http://maven.codehaus.org/maven2/</url>
 </repository>]]></source>
 
     </section>
@@ -129,11 +130,12 @@
 
     </section>
 
-    <section title="Available snapshot release artefacts">
-        
-        <p>The following table summarizes the build artefacts currently available
-           through the <a href="http://snapshots.repository.codehaus.org/">Codehaus Maven 2 snapshot repository</a>.</p>
-           
+    <section title="Available snapshot release artifacts">
+
+        <p>The following table summarizes the build artifacts currently available
+           through the <a href="http://snapshots.repository.codehaus.org/">Codehaus
+           Maven 2 snapshot repository</a>.</p>
+
         <ctable>
             <cheader>
                 <th>Description</th>
@@ -148,7 +150,7 @@
    <artifactId>castor</artifactId>
    <version>1.0.5-SNAPSHOT</version>
 </dependency>]]></pre></td>
-				<td>1.0.5-SNAPSHOT</td>
+        <td>1.0.5-SNAPSHOT</td>
             </crow>
             <crow>
                <td>Castor DDL generator</td>
@@ -158,7 +160,7 @@
    <artifactId>castor-ddlgen</artifactId>
    <version>1.1-M2-SNAPSHOT</version>
 </dependency>]]></pre></td>
-				<td>1.1-M2-SNAPSHOT</td>
+        <td>1.1-M2-SNAPSHOT</td>
             </crow>
             <crow>
                <td>Castor XML code generator</td>
@@ -168,7 +170,7 @@
    <artifactId>castor-codegen</artifactId>
    <version>1.1-M2-SNAPSHOT</version>
 </dependency>]]></pre></td>
-				<td>1.1-M2_SNAPSHOT</td>
+        <td>1.1-M2_SNAPSHOT</td>
             </crow>
             <crow>
                <td>Ant task definition for Castor XML code generator</td>
@@ -178,7 +180,7 @@
    <artifactId>castor-codegen-anttask</artifactId>
    <version>1.1-M2-SNAPSHOT</version>
 </dependency>]]></pre></td>
-				<td>1.1-M2-SNAPSHOT</td>
+        <td>1.1-M2-SNAPSHOT</td>
             </crow>
             <crow>
                <td>Castor XML Spring factory beans</td>
@@ -188,7 +190,7 @@
    <artifactId>spring-xml</artifactId>
    <version>1.0-SNAPSHOT</version>
 </dependency>]]></pre></td>
-				<td>-</td>
+        <td>-</td>
             </crow>
             <crow>
                <td>Spring ORM for Castor JDO</td>
@@ -198,11 +200,11 @@
    <artifactId>castor-spring</artifactId>
    <version>1.0-SNAPSHOT</version>
 </dependency>]]></pre></td>
-				<td>-</td>
+        <td>-</td>
             </crow>
         </ctable>
-        
-        <p>For those artefacts available as <b>snapshot</b> releases only, please make sure
+
+        <p>For those artifacts available as <b>snapshot</b> releases only, please make sure
            that your project POMS include the following <tt>&lt;repository&gt;</tt>
            definition:</p>
 
@@ -209,8 +211,8 @@
             <source><![CDATA[
 <repository>
     <id>codehaus-snapshots</id>
-    <name>Maven Codehaus Snapshots</name> 
-    <url>http://snapshots.maven.codehaus.org/maven2/</url> 
+    <name>Maven Codehaus Snapshots</name>
+    <url>http://snapshots.maven.codehaus.org/maven2/</url>
 </repository>]]></source>
 
     </section>
@@ -218,4 +220,3 @@
   </body>
 
 </document>
-
Index: doc/new-license.xml
===================================================================
--- doc/new-license.xml	(revision 6713)
+++ doc/new-license.xml	(working copy)
@@ -7,10 +7,14 @@
 
     <section title="">
 
-    <p>New artefacts of this project (including refcatored ones that have changed substantially) will be 
-	   released under Apache 2.0-style license [<a href="license.txt">license.txt</a>]:</p>
+    <p>
+      New artifacts of this project (including refactored ones that have
+      changed substantially) will be released under Apache 2.0-style license
+      [<a href="license.txt">license.txt</a>]:
+    </p>
+
     <pre>
-Copyright 2004-2005 &lt;&lt;copyright holder&gt;&gt;
+Copyright 2004-2007 &lt;&lt;copyright holder&gt;&gt;
 
 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
Index: doc/release-notes-1.0-to-0.9.7.xml
===================================================================
--- doc/release-notes-1.0-to-0.9.7.xml	(revision 6713)
+++ doc/release-notes-1.0-to-0.9.7.xml	(working copy)
@@ -640,7 +640,7 @@
                    context of source generation) a result of a &lt;complexType&gt; definition or an
                    &lt;element&gt; declaration. This is particularly relevant for tool providers who need to
                    integrate with Castor XML, and as a result of this addition can now use the new
-                   <tt>isElementDefinition()</tt> method to query an artefact's state.</p>
+                   <tt>isElementDefinition()</tt> method to query an artifact's state.</p>
 
                 <h3>New XML HOW-TOs added</h3>
 
Index: doc/release-notes.xml
===================================================================
--- doc/release-notes.xml	(revision 6714)
+++ doc/release-notes.xml	(working copy)
@@ -34,6 +34,26 @@
             <summary>
             </summary>
             <bugs>
+                <bug id="1808" tool="jira">
+                    <description>
+                        Cleanup of misc documentation
+                    </description>
+                    <contributor>
+                        <name>Edward Kuns</name>
+                        <email>edward.kuns@aspect.com</email>
+                    </contributor>
+                    <submitter>
+                        <name>Edward Kuns</name>
+                        <email>edward.kuns@aspect.com</email>
+                    </submitter>
+                    <reporter>
+                        <name>Edward Kuns</name>
+                        <email>edward.kuns@aspect.com</email>
+                    </reporter>
+                    <type>Enh</type>
+                    <module>Doc</module>
+                    <date>20070103</date>
+                </bug>
                 <bug id="1807" tool="jira">
                     <description>
                         Add RSS feed link to index + news page
Index: doc/srcgen-properties.xml
===================================================================
--- doc/srcgen-properties.xml	(revision 6713)
+++ doc/srcgen-properties.xml	(working copy)
@@ -15,125 +15,125 @@
 
     <title>Castor XML - Code generator properties</title>
 
-		<section title="Overview">
-		
+    <section title="Overview">
+
             <p>Please find below a list of properties that can be set in the
                <tt>castor-builder.properties</tt> file to control various advanced
-               options of the source generator. By default, the Castor XML code 
+               options of the source generator. By default, the Castor XML code
                will look for such a property file in the following places:</p>
-               
+
             <p><ol>
-            	<li>If no custom property file is specified, the Castor XML code
-            	    generator will use the default builder configuration
-            	    properties at 
-            	    <tt>org/exolab/castor/builder/castorbuilder.properties</tt>.</li>
-            	<li>If a file named <tt>castorbuilder.properties</tt> is available
-            	    on the CLASSPATH, the Castor XML code generator will use each of the
-            	    defined property values to override the default value as explained 
-            	    above. This fiel is commonly referred to as a <b>custom</b>
-            	    builder configuration file.</li> 
+              <li>If no custom property file is specified, the Castor XML code
+                  generator will use the default builder configuration
+                  properties at
+                  <tt>org/exolab/castor/builder/castorbuilder.properties</tt>.</li>
+              <li>If a file named <tt>castorbuilder.properties</tt> is available
+                  on the CLASSPATH, the Castor XML code generator will use each of the
+                  defined property values to override the default value as explained
+                  above. This fiel is commonly referred to as a <b>custom</b>
+                  builder configuration file.</li>
             </ol></p>
-            
+
             <ctable>
-            	<cheader>
-	               <th align="center">Option</th>
-	               <th>Description</th>
-	               <th>Values</th>
-	               <th>Default</th>
-	               <th>Since<br/>Version</th>
-            	</cheader>
-            	<crow>
-            		<td>org.exolab.castor.builder.javaVersion</td>
-            		<td>Compliance with Java version</td>
-            		<td><tt>1.4</tt> or <tt>5.0</tt></td>
-            		<td>1.4</td>
-            		<td>1.0.2</td>
-            	</crow>
-            	<crow>
-            		<td>org.exolab.castor.builder.boundproperties</td>
-            		<td>Generation of bound properties</td>
-            		<td><tt>true</tt> or <tt>false</tt></td>
-            		<td><tt>false</tt></td>
-            		<td>0.8.9</td>
-            	</crow>
-            	<crow>
-            		<td>org.exolab.castor.builder.javaclassmapping</td>
-            		<td>Class generation mode</td>
-            		<td><tt>element</tt> or <tt>type</tt></td>
-            		<td><tt>element</tt></td>
-            		<td>0.9.1</td>
-            	</crow>
-            	<crow>
-            		<td>org.exolab.castor.builder.superclass</td>
-            		<td>Global super class (for all classes generated)</td>
-            		<td>Any valid class name</td>
-            		<td>-</td>
-            		<td>0.8.9</td>
-            	</crow>
-            	<crow>
-            		<td>org.exolab.castor.builder.nspackages</td>
-            		<td>XML namespace to package name mapping</td>
-            		<td>A series of mappings</td>
-            		<td>-</td>
-            		<td>0.8.9</td>
-            	</crow>
-            	<crow>
-            		<td>org.exolab.castor.builder.equalsmethod</td>
-            		<td>Generation of <tt>equals</tt> method</td>
-            		<td><tt>true</tt> or <tt>false</tt></td>
-            		<td><tt>false</tt></td>
-            		<td>0.9.1</td>
-            	</crow>
-            	<crow>
-            		<td>org.exolab.castor.builder.primitivetowrapper</td>
-            		<td>Generation of Object wrappers instead of primitives</td>
-            		<td><tt>true</tt> or <tt>false</tt></td>
-            		<td><tt>false</tt></td>
-            		<td>0.9.4</td>
-            	</crow>
+              <cheader>
+                 <th align="center">Option</th>
+                 <th>Description</th>
+                 <th>Values</th>
+                 <th>Default</th>
+                 <th>Since<br/>Version</th>
+              </cheader>
+              <crow>
+                <td>org.exolab.castor.builder.javaVersion</td>
+                <td>Compliance with Java version</td>
+                <td><tt>1.4</tt> or <tt>5.0</tt></td>
+                <td>1.4</td>
+                <td>1.0.2</td>
+              </crow>
+              <crow>
+                <td>org.exolab.castor.builder.boundproperties</td>
+                <td>Generation of bound properties</td>
+                <td><tt>true</tt> or <tt>false</tt></td>
+                <td><tt>false</tt></td>
+                <td>0.8.9</td>
+              </crow>
+              <crow>
+                <td>org.exolab.castor.builder.javaclassmapping</td>
+                <td>Class generation mode</td>
+                <td><tt>element</tt> or <tt>type</tt></td>
+                <td><tt>element</tt></td>
+                <td>0.9.1</td>
+              </crow>
+              <crow>
+                <td>org.exolab.castor.builder.superclass</td>
+                <td>Global super class (for all classes generated)</td>
+                <td>Any valid class name</td>
+                <td>-</td>
+                <td>0.8.9</td>
+              </crow>
+              <crow>
+                <td>org.exolab.castor.builder.nspackages</td>
+                <td>XML namespace to package name mapping</td>
+                <td>A series of mappings</td>
+                <td>-</td>
+                <td>0.8.9</td>
+              </crow>
+              <crow>
+                <td>org.exolab.castor.builder.equalsmethod</td>
+                <td>Generation of <tt>equals</tt> method</td>
+                <td><tt>true</tt> or <tt>false</tt></td>
+                <td><tt>false</tt></td>
+                <td>0.9.1</td>
+              </crow>
+              <crow>
+                <td>org.exolab.castor.builder.primitivetowrapper</td>
+                <td>Generation of Object wrappers instead of primitives</td>
+                <td><tt>true</tt> or <tt>false</tt></td>
+                <td><tt>false</tt></td>
+                <td>0.9.4</td>
+              </crow>
             </ctable>
-            
-		</section>
+
+    </section>
 
        <section title="Available properties">
-                       
-		    <section title="News: Source generation &amp; Java 5.0">
-		
-		        <p>As of <b>Castor 1.0.2</b>, the Castor source generator now supports the 
-		           generation of Java 5.0 compliant code. The generated code - with the 
-		           new feature enabled - will make use of the following Java 5.0-specific
-		           artefacts:
-		           
-		           <ul>
-		            <li>Use of parameterized collections, e.g. ArrayList&lt;String&gt;.</li>
-		            <li>Use of @Override annotations with the generated methods 
-		                that require it.</li>
-		            <li>Use of @SupressWarnings with "unused" method parameters 
-		                on the generated methods that needed it.</li>
-		            <li>Added "enum" to the list of reserved keywords.</li>
-		           </ul></p>
-		                   
-		        <p>To enable this feature (off by default), please uncomment the
-		           following property in your custom <tt>castorbuilder.properties</tt>
-		           file:</p>
-		                   
-		        <code-panel>
-		# This property specifies whether the sources generated
-		# should comply with java 1.4 or 5.0; defaults to 1.4
-		org.exolab.castor.builder.javaVersion=5.0
-		        </code-panel>
-		                
-		    </section>
-		    
+
+        <section title="News: Source generation &amp; Java 5.0">
+
+            <p>As of <b>Castor 1.0.2</b>, the Castor source generator now supports the
+               generation of Java 5.0 compliant code. The generated code - with the
+               new feature enabled - will make use of the following Java 5.0-specific
+               artifacts:
+
+               <ul>
+                <li>Use of parameterized collections, e.g. ArrayList&lt;String&gt;.</li>
+                <li>Use of @Override annotations with the generated methods
+                    that require it.</li>
+                <li>Use of @SupressWarnings with "unused" method parameters
+                    on the generated methods that needed it.</li>
+                <li>Added "enum" to the list of reserved keywords.</li>
+               </ul></p>
+
+            <p>To enable this feature (off by default), please uncomment the
+               following property in your custom <tt>castorbuilder.properties</tt>
+               file:</p>
+
+            <code-panel>
+    # This property specifies whether the sources generated
+    # should comply with java 1.4 or 5.0; defaults to 1.4
+    org.exolab.castor.builder.javaVersion=5.0
+            </code-panel>
+
+        </section>
+
             <section title="Bound Properties">
 
-                <p>Bound properties are "properties" of a class, which when 
-                   updated the class will send out a <api>java.beans.PropertyChangeEvent</api> 
+                <p>Bound properties are "properties" of a class, which when
+                   updated the class will send out a <api>java.beans.PropertyChangeEvent</api>
                    to all registered <api>java.beans.PropertyChangeListeners</api>.</p>
-                   
-                <p>To enable bound properties, please add the following property definition 
+
+                <p>To enable bound properties, please add the following property definition
                    to your custom builder configuration file:</p>
-                   
+
                 <code-panel>
 # To enable bound properties uncomment the following line. Please
 # note that currently *all* fields will be treated as bound properties
@@ -142,10 +142,10 @@
 #
 org.exolab.castor.builder.boundproperties=true</code-panel>
 
-                <p>When enabled, <b>all</b> properties will be treated as bound properties. For 
-                   each class that is generated a <tt>setPropertyChangeListener</tt> method is 
+                <p>When enabled, <b>all</b> properties will be treated as bound properties. For
+                   each class that is generated a <tt>setPropertyChangeListener</tt> method is
                    created as follows:</p>
-                
+
                 <code-panel>
 <comment>
 /**
@@ -157,35 +157,35 @@
 {
    propertyChangeListeners.addElement(pcl);
 } //-- void addPropertyChangeListener</code-panel>
-    
-                <p>Whenever a property of the class is changed, a 
-                   <api>java.beans.PropertyChangeEvent</api> will be sent to 
-                   all registered listeners. The property name, the old value and 
+
+                <p>Whenever a property of the class is changed, a
+                   <api>java.beans.PropertyChangeEvent</api> will be sent to
+                   all registered listeners. The property name, the old value and
                    the new value will be set in the <b>java.beans.PropertyChangeEvent</b>.</p>
-                    
-                <note>To prevent unnecessary overhead, if the property is a collection, 
+
+                <note>To prevent unnecessary overhead, if the property is a collection,
                       the old value will be <i>null</i>.</note>
-                   
+
          </section>
-            
+
          <section title="Class Creation/Mapping">
 
             <p>The source generator can treat the XML Schema structures such as &lt;complexType&gt;
-               and element in two main ways. The first, and current default method is called the 
+               and element in two main ways. The first, and current default method is called the
                "element" method. The other is called the "type" method.</p>
-               
+
             <ctable>
-            	<cheader>
-            		<th>Method</th>
-            		<th>Explanation</th>
-            	</cheader>
-            	<crow>
-            		<td valign="top">'element'</td>
-            		<td valign="top">
-               			   The "element" method creates classes for all elements whose type is a 
-                           &lt;complexType&gt;. Abstract classes are created for all top-level 
-                           &lt;complexType&gt;s. Any elements whose type is a top-level type will have 
-                           a new class create that extends the abstract class which was generated for 
+              <cheader>
+                <th>Method</th>
+                <th>Explanation</th>
+              </cheader>
+              <crow>
+                <td valign="top">'element'</td>
+                <td valign="top">
+                        The "element" method creates classes for all elements whose type is a
+                           &lt;complexType&gt;. Abstract classes are created for all top-level
+                           &lt;complexType&gt;s. Any elements whose type is a top-level type will have
+                           a new class create that extends the abstract class which was generated for
                            that top-level complexType.<br/>
                            Classes are not created for elements whose type is a &lt;simpleType&gt;.
                     </td>
@@ -191,8 +191,8 @@
                     </td>
                 </crow>
                 <crow>
-                	<td valign="top">'type'</td>
-                	<td valign="top">
+                  <td valign="top">'type'</td>
+                  <td valign="top">
                            The "type" method creates classes for all top-level &lt;complexType&gt;s, or
                            elements that contain an "anonymous" (in-lined) &lt;complexType&gt;.<br/>
                            Classes will not be generated for elements whose type is a top-level
@@ -200,10 +200,10 @@
                     </td>
                 </crow>
             </ctable>
-            
-            <p>To change the "method" of class creation, please add the following property 
+
+            <p>To change the "method" of class creation, please add the following property
                definition to your custom builder configuration file:</p>
-               
+
             <code-panel>
 # Java class mapping of &lt;xsd:element&gt;'s and &lt;xsd:complexType&gt;'s
 #
@@ -211,15 +211,15 @@
          </section>
 
          <section title="Setting a super class">
-         
+
             <p>The source generator enables the user to set a super class to <b>all</b> the
                generated classes (of course, class descriptors are not affected
-               by this option). Pleae note that, though the binding file, it is possible 
+               by this option). Pleae note that, though the binding file, it is possible
                to define a super class for individual classes</p>
-                
-            <p>To set the global super class, please add the following property 
+
+            <p>To set the global super class, please add the following property
                definition to your custom builder configuration file:</p>
-               
+
             <code-panel>
 # This property allows one to specify the super class of *all*
 # generated classes
@@ -229,7 +229,7 @@
         </section>
 
         <section title="Mapping XML namespaces to Java packages" sub-title="Schema Imports">
-        
+
             <p>
                 An XML Schema instance is identified by a namespace. For data-binding purposes,
                 especially code generation it may be necessary to map namespaces to Java packages.
@@ -267,19 +267,19 @@
         <section title="Maps java primitive types to wrapper object">
              <p>Since version 0.9.4</p>
              <p>
-		It may be convenient to use java objects instead of primitives,
-		the Source Generator provides a way to do it. Thus the following mapping can be used:
-		<ul>
-			<li>boolean to java.lang.Boolean</li>
-			<li>byte to java.lang.Byte</li>
-			<li>double to java.lang.Double</li>
-			<li>float to java.lang.Float</li>
-			<li>int and integer to java.lang.Integer</li>
-			<li>long to java.lang.Long</li>
-			<li>short to java.lang.Short</li>
-		</ul>
-	     </p>
- 	     <p>To enable this property, edit the castor builder.properties file:
+    It may be convenient to use java objects instead of primitives,
+    the Source Generator provides a way to do it. Thus the following mapping can be used:
+    <ul>
+      <li>boolean to java.lang.Boolean</li>
+      <li>byte to java.lang.Byte</li>
+      <li>double to java.lang.Double</li>
+      <li>float to java.lang.Float</li>
+      <li>int and integer to java.lang.Integer</li>
+      <li>long to java.lang.Long</li>
+      <li>short to java.lang.Short</li>
+    </ul>
+       </p>
+        <p>To enable this property, edit the castor builder.properties file:
         <code-panel>
 # Set to true if you want to use Object Wrappers instead
 # of primitives (e.g Float instead of float).
@@ -285,11 +285,11 @@
 # of primitives (e.g Float instead of float).
 # false by default.
 #org.exolab.castor.builder.primitivetowrapper=false</code-panel>
-	     </p>
-	     
-	   </section>
+       </p>
 
-	</section>
+     </section>
+
+  </section>
 
   </body>
 
Index: etc/CHANGELOG
===================================================================
--- etc/CHANGELOG	(revision 6714)
+++ etc/CHANGELOG	(working copy)
@@ -1,6 +1,11 @@
 SVN
 -------------------------------
 
+Doc:   Resolved issue CASTOR-1808 using contribution from Edward Kuns [edward.kuns@aspect.com]
+       Cleanup of misc documentation
+       Details: http://jira.codehaus.org/browse/CASTOR-1808
+       (Edward - 20070103)
+
 Doc:   Resolved issue CASTOR-1807 using contribution from Edward Kuns [edward.kuns@aspect.com]
        Add RSS feed link to index + news page
        Details: http://jira.codehaus.org/browse/CASTOR-1807
Index: castor-1808.diff
===================================================================
--- castor-1808.diff	
+++ castor-1808.diff	
@@ -0,0 +1,1787 @@
+Index: doc/download.xml
+===================================================================
+--- doc/download.xml	(revision 6713)
++++ doc/download.xml	(working copy)
+@@ -5,7 +5,7 @@
+     <title>Download instructions &amp; dependencies</title>
+     <author email="werner DOT guttmann AT gmx DOT net">Werner Guttmann</author>
+     <abstract>
+-      Outlines how to downlaod Castor JArs and explains dependencies to third-party
++      Outlines how to download Castor JARs, explains dependencies on third-party
+       products.
+     </abstract>
+     <status>Final</status>
+@@ -60,7 +60,7 @@
+ 
+         <section title="XML code generation -- Ant task">
+           <ul>
+-            <li>Ant task definition for the source generator<br/>
++            <li>Ant task definition for the code generator<br/>
+               <url>http://dist.codehaus.org/castor/$STABLE_VERSION$/castor-$STABLE_VERSION$$STABLE_RELEASE$-srcgen-ant-task.jar</url>
+               <br/>&#xA0;
+             </li>
+@@ -70,7 +70,7 @@
+         <section title="Samples">
+           <ul>
+             <li>
+-              Self-executable JDO examples using Apache Derby (big)<br/>
++              Self-executing JDO examples using Apache Derby (big)<br/>
+               <url>http://dist.codehaus.org/castor/$STABLE_VERSION$/castor-$STABLE_VERSION$$STABLE_RELEASE$-examples.zip</url>
+               <br/>&#xA0;
+             </li>
+@@ -115,50 +115,51 @@
+ -->
+ 
+          <p>
+-           <small>The tarball and zips includes all the JARs required by Castor, the
+-           docs and API JavaDocs. To fully install Castor, simply extract all the JARs
+-           into your classpath.</small>
++           <small>The tarball and zips include all the JARs required by Castor,
++           the docs, and the API JavaDocs. To fully install Castor, simply
++           extract all the JARs into your classpath.</small>
+          </p>
+ 
+          <p>
+-           <small>The SVN snapshot includes additional JARs required to build Castor.
+-           It is self sufficient and does not require any external components except
+-           for javac.</small>
++           <small>The SVN snapshot includes additional JARs required to build
++           Castor. It is self-sufficient and does not require any external
++           components other than javac.</small>
+          </p>
+ 
+          <p>
+-           <small>The documentation set includes JavaDocs for the full source code,
+-           including class usage. A small documentation set without the full source
+-           JavaDocs is available in the tarball and zips.</small>
++           <small>The documentation set includes JavaDocs for the full source
++           code, documenting class usage. A small documentation set without the
++           full source JavaDocs is available in the tarball and zips.</small>
+          </p>
+ 
+          <p>
+-           <small>All the JARs included with Castor and used for building Castor
+-           are available for distribution free of charge, subject to the respective
+-           license agreements.</small>
++           <small>All of the JARs included with Castor (used for building
++           Castor) are available for distribution free of charge, subject to
++           the respective license agreements.</small>
+          </p>
+ 
+          <p>
+-           <small>All implementation JARs (i.e. non APIs) are available under an
+-           open source license and available from our FTP server.
+-           Open source licenses in use include Apache (ASF), Exolab, Mozilla (MPL),
+-           and public domain. All licenses are fully compatible with each other.</small>
++           <small>All implementation JARs (i.e. not APIs) are available under
++           an open source license and available from our FTP server.  Open
++           source licenses in use include Apache (ASF), Exolab, Mozilla (MPL),
++           and public domain. All licenses are fully compatible with each
++           other.</small>
+          </p>
+ 
+          <p>
+-           <small>The example JAR includes fully functional samples that demonstrate the use
+-           of various features of Castor, including marshaling and unmarshaling to/from XML,
+-           data persistence using JDO, and source code generation from an XML Schema instance.
+-           </small>
++           <small>The example JAR includes fully functional samples that
++           demonstrate the use of various features of Castor -- including
++           marshaling and unmarshaling to and from XML, data persistence using
++           JDO, and source code generation from an XML Schema instance.</small>
+          </p>
+ 
+          <p>
+-           <small>The example wep application (in form of a WAR archive) includes fully
+-           functional samples that demonstrate the use of Castor from within a standard
+-           J2EE web application. The WAR file can be deployed to any J2EE compliant web
+-           application container (including amongst others Tomcat, WebSphere, JBoss, Weblogic,
+-           etc.) using the standard way of deployment of your web application server.
+-           </small>
++           <small>The example web application (in form of a WAR archive)
++           includes fully functional samples that demonstrate the use of Castor
++           from within a standard J2EE web application. The WAR file can be
++           deployed to any J2EE compliant web application container (including,
++           amongst others, Tomcat, WebSphere, JBoss, and Weblogic) using the
++           standard deployment method of your web application server.</small>
+          </p>
+ 
+       </section>
+@@ -170,7 +171,7 @@
+             <b>Release date: $RELEASE_DATE$</b>
+ 
+             <li><a href="release-notes.xml">What changed?</a></li>
+-          </ul>  
++          </ul>
+ 
+         <section title="Binaries">
+ 
+@@ -201,23 +202,24 @@
+               <br/>&#xA0;
+             </li>
+           </ul>
+-            
+-          <p><font color="red"><b>*** Note ***</b></font>: Please note that the Castor 
+-             XML (and JDO) JARs do not include the code for the DDL generator, XML code 
+-             generator and Ant task for the latter anymore. In other words, if you want to be 
+-             using both Castor XML (for XML data binding operations, i.e. marshalling and 
+-             unmarshalling) and the XML code generator for Java code generation from an 
+-             XML schema, you will have to download both JARs in this case. If you want 
+-             use the Ant task for the XML code generator, please download the JARs for 
+-             Castor XML, the XMl code generator and the Ant task definition.</p>
++
++          <p>
++            <font color="red"><b>*** Note ***</b></font>: Please note that the
++            Castor XML and JDO JARs no longer include the code for the DDL
++            generator or XML code generator (and of course still do not include
++            the code for the Ant task for the XML code generator.) In other
++            words, if you want to use the Castor XML Schema code generator or
++            the DDL generator, you will need to download JARs in addition to
++            the JARs you downloaded previously.
++          </p>
+ 
+         </section>
+-        
++
+         <section title="Download sets">
+-        
++
+           <ul>
+             <li>
+-              The Castor JARs, docs, DTDs, command line tools and examples<br/>
++              The Castor JARs, docs, DTDs, command line tools, and examples<br/>
+               <url>http://dist.codehaus.org/castor/$VERSION$/castor-$VERSION$$RELEASE$.tgz</url><br/>
+               <url>http://dist.codehaus.org/castor/$VERSION$/castor-$VERSION$$RELEASE$.zip</url>
+               <br/>&#xA0;
+@@ -229,7 +231,7 @@
+               <br/>&#xA0;
+             </li>
+             <li>
+-              Full SVN snapshot: all sources, docs, libraries (big)<br/>
++              Full SVN snapshot: All sources, docs, and 3rd party libraries (big)<br/>
+               <url>http://dist.codehaus.org/castor/$VERSION$/castor-$VERSION$$RELEASE$-src.tgz</url><br/>
+               <url>http://dist.codehaus.org/castor/$VERSION$/castor-$VERSION$$RELEASE$-src.zip</url>
+               <br/>&#xA0;
+@@ -235,7 +237,7 @@
+               <br/>&#xA0;
+             </li>
+           </ul>
+-          
++
+         </section>
+ 
+         <section title="Samples">
+@@ -241,7 +243,7 @@
+         <section title="Samples">
+           <ul>
+             <li>
+-              Self-executable JDO examples using Apache Derby (big)<br/>
++              Self-executing JDO examples using Apache Derby (big)<br/>
+               <url>http://dist.codehaus.org/castor/$VERSION$/castor-$VERSION$$RELEASE$-examples.zip</url>
+               <br/>&#xA0;
+             </li>
+@@ -246,7 +248,7 @@
+               <br/>&#xA0;
+             </li>
+             <li>
+-              Castor examples -- sources (incl. xml, JDO, source generator)<br/>
++              Castor examples -- sources (incl. XML, JDO, source generator)<br/>
+               <url>http://dist.codehaus.org/castor/$VERSION$/castor-$VERSION$$RELEASE$-examples-sources.jar</url>
+               <br/>&#xA0;
+             </li>
+@@ -283,7 +285,7 @@
+ </dependency>]]></source>
+ 
+           <p>
+-            As we are currently providing snapshot releases only for the factory beans, you will
++            As we currently provide snapshot releases only for the factory beans, you will
+             have to add the following <tt>&lt;repository&gt;</tt> element to your POM as well,
+             so that Maven 2 knows about the <i>Codehaus Snapshot repository</i> when trying
+             to resolve and download dependencies.
+@@ -335,7 +337,7 @@
+ </dependency>]]></source>
+ 
+           <p>
+-            As we are currently providing snapshot releases only for the factory beans, you will
++            As we currently provide snapshot releases only for the factory beans, you will
+             have to add the following <tt>&lt;repository&gt;</tt> element to your POM as well,
+             so that Maven 2 knows about the <i>Codehaus Snapshot repository</i> when trying
+             to resolve and download dependencies.
+@@ -435,7 +437,9 @@
+       <p>
+         JARs required to build Castor and dependencies for various packages are
+         contained in the <tt>lib</tt> directory. JARs required for distribution
+-        are marked with <b>bold text</b>:
++        are marked with <b>bold text</b>, although many of these JARs are
++        required only if the feature obviously associated with that JAR is
++        used.
+       </p>
+ 
+       <ctable cellpadding="4" border="1">
+@@ -492,9 +496,9 @@
+         </p>
+ 
+         <p>
+-          The JDO examples uses <a href="http://db.apache.org/derby">Apache Derby</a> and
+-          depends on the JDBC driver provided with the examples archive. This driver is only
+-          required for running the samples, and is not required otherwise, especially if you
++          The JDO examples use <a href="http://db.apache.org/derby">Apache Derby</a> and
++          depend on the JDBC driver provided with the examples archive. This driver is only
++          required for running the samples and is not required otherwise, especially if you
+           use a different database server.
+         </p>
+ 
+Index: doc/jdo-examples.xml
+===================================================================
+--- doc/jdo-examples.xml	(revision 6713)
++++ doc/jdo-examples.xml	(working copy)
+@@ -14,24 +14,29 @@
+     </header>
+ 
+     <section title="Introduction">
+-        
+-       <p>Here are examples of object mappings and the corresponding Java objects and
+-          DDL for the database table.</p>
++
++       <p>
++         This document provides object mapping examples and the corresponding
++         Java objects and DDL for the database table.
++       </p>
+ 
+        <section title="Java class files">
+-       
+-          <p>The following fragment shows the Java class declaration for the Product class:</p>
+-       
++
++          <p>
++            The following fragment shows the Java class declaration for the
++            <tt>Product</tt> class:
++          </p>
++
+           <code-panel>
+ package myapp;
+ 
+-public class Product 
+-{
++public class Product {
++
+     private int       _id;
+ 
+-    private String    _name; 
++    private String    _name;
+ 
+-    private float     _price; 
++    private float     _price;
+ 
+     private ProductGroup _group;
+ 
+@@ -53,11 +58,13 @@
+     public void setProductGroup( ProductGroup aProductGroup ) { ... }
+ }</code-panel>
+ 
+-      <p>The following fragment shows the Java class declaration for the ProductGroup class:</p>
+-      
++      <p>
++        The following fragment shows the Java class declaration for the
++        <tt>ProductGroup</tt> class:
++      </p>
++
+       <code-panel>
+-public class ProductGroup
+-{
++public class ProductGroup {
+ 
+     private int       _id;
+ 
+@@ -74,17 +81,18 @@
+ }</code-panel>
+ 
+       </section>
+-        
++
+        <section title="DDL">
+-       
+-          <p>The following sections show the DDL for the relational database tables 
+-             PROD, PROD_GROUP and PROD_DETAIL:</p>
+-        
+-          <p><b>PROD</b>:</p>
+-          
++
++          <p>
++            The following sections show the DDL for the relational database
++            tables <tt>PROD</tt>, <tt>PROD_GROUP</tt>, and <tt>PROD_DETAIL</tt>:
++          </p>
++
++          <p><b><tt>PROD</tt></b>:</p>
++
+           <code-panel>
+-create table prod 
+-(
++create table prod (
+   id        int           not null,
+   name      varchar(200)  not null,
+   price     numeric(18,2) not null,
+@@ -91,8 +99,8 @@
+   group_id  int           not null
+ );</code-panel>
+ 
+-          <p><b>PROD_GROUP</b>:</p>
+-          
++          <p><b><tt>PROD_GROUP</tt></b>:</p>
++
+           <code-panel>
+ create table prod_group (
+   id        int           not null,
+@@ -98,9 +106,9 @@
+   id        int           not null,
+   name      varchar(200)  not null
+ );</code-panel>
+-          
+-          <p><b>PROD_DETAIL</b>:</p>
+-          
++
++          <p><b><tt>PROD_DETAIL</tt></b>:</p>
++
+           <code-panel>
+ create table prod_detail (
+   id        int           not null,
+@@ -107,13 +115,16 @@
+   prod_id   int           not null,
+   name      varchar(200)  not null
+ );</code-panel>
+-          
++
+        </section>
+-       
++
+        <section title="Object Mappings">
+ 
+-        <p>The following code fragment shows the object mapping for the ProductGroup class:</p>
+-           
++        <p>
++          The following code fragment shows the object mapping for the
++          <tt>ProductGroup</tt> class:
++        </p>
++
+         <code-panel>
+ &lt;?xml version="1.0"?>
+ &lt;!DOCTYPE mapping PUBLIC "-//EXOLAB/Castor Object Mapping DTD Version 1.0//EN"
+@@ -121,19 +132,19 @@
+ &lt;mapping>
+ 
+   &lt;class name="myapp.ProductGroup" identity="id"&gt;
+-  
++
+     &lt;description&gt;Product group&lt;/description&gt;
+-    
++
+     &lt;map-to table="prod_group" xml="group" /&gt;
+-    
++
+     &lt;field name="id" type="integer" &gt;
+       &lt;sql name="id" type="integer"/&gt;
+     &lt;/field&gt;
+-    
++
+     &lt;field name="name" type="string"&gt;
+       &lt;sql name="name" type="char" /&gt;
+     &lt;/field&gt;
+-    
++
+   &lt;/class>
+ 
+ &lt;/mapping></code-panel>
+@@ -138,9 +149,12 @@
+ 
+ &lt;/mapping></code-panel>
+ 
+-       <p>As a result of that declaration, Castor JDO would create the following SQL statements
+-          for creating, deleting, loading and updating instances of ProductGroup:</p>
+-          
++       <p>
++         As a result of that declaration, Castor JDO will create the following
++         SQL statements for creating, deleting, loading and updating instances
++         of <tt>ProductGroup</tt>:
++       </p>
++
+        <code-panel>
+ create: INSERT INTO prod_group (id, name) VALUES (?,?)
+ delete: DELETE FROM prod_group WHERE id=?
+@@ -147,25 +161,30 @@
+ load:   SELECT prod_group.id, prod_group.name FROM prod_group WHERE prod_group.id=?;
+ update: UPDATE prod_group SET name=? WHERE id=?
+        </code-panel>
+-          
++
+        <section title="Read-only fields">
+ 
+-          <p>To declare the <i>name</i> field <b>read-only</b>, above field definition for the 
+-             field <i>name</i> needs to be changed to:</p>
++          <p>
++            To declare the <i>name</i> field <b>read-only</b>, the field
++            definition above for the field <i>name</i> needs to be changed to:
++          </p>
+ 
+           <code-panel>
+   &lt;class name="myapp.ProductGroup" identity="id"&gt;
+-  
+-    ...    
++
++    ...
+     &lt;field name="name" type="string"&gt;
+       &lt;sql name="name" type="char" <font color="red">read-only="true"</font> /&gt;
+     &lt;/field&gt;
+-    
++
+   &lt;/class></code-panel>
+-         
+-          <p>As a result of that declaration, Castor JDO creates the following SQL statements
+-            for creating, deleting, loading and updating instances of ProductGroup:</p>
+-          
++
++          <p>
++            As a result of that declaration, Castor JDO creates the following
++            SQL statements for creating, deleting, loading and updating
++            instances of <tt>ProductGroup</tt>:
++          </p>
++
+           <code-panel>
+ create: INSERT INTO prod_group (id) VALUES (?)
+ delete: DELETE FROM prod_group WHERE id=?
+@@ -170,8 +189,8 @@
+ create: INSERT INTO prod_group (id) VALUES (?)
+ delete: DELETE FROM prod_group WHERE id=?
+ load:   SELECT prod_group.id, prod_group.name FROM prod_group WHERE prod_group.id=?;
+-update: <i>no statement will be generated</i></code-panel> 
+-         
++update: <i>no statement will be generated</i></code-panel>
++
+        </section>
+ 
+        <section title="Transient fields">
+@@ -176,31 +195,37 @@
+ 
+        <section title="Transient fields">
+ 
+-          <p>To declare the <i>name</i> field <b>transient</b> with regards to persistence, above field 
+-             definition for the field <i>name</i> needs to be changed to:</p>
++          <p>
++            To declare the <i>name</i> field <b>transient</b> with regards to
++            persistence, above field definition for the field <i>name</i> needs
++            to be changed to:
++          </p>
+ 
+           <code-panel>
+   &lt;class name="myapp.ProductGroup" identity="id"&gt;
+-  
+-    ...    
++
++    ...
+     &lt;field name="name" type="string" &gt;
+       &lt;sql name="name" type="char" <font color="red">transient="true"</font> /&gt;
+     &lt;/field&gt;
+-    
++
+   &lt;/class></code-panel>
+ 
+        </section>
+-          
++
+     </section>
+-    
++
+     <section title="Relations">
+-        
++
+        <section title="1:1 relation">
+ 
+-          <p>The following code fragment shows the mapping file for the Product class. 
+-             Apart from the simple field declarations, this includes a simple 1:1 relation between 
+-             Product and ProductGroup, where every product instance is associated with a 
+-             ProductGroup:</p>
++          <p>
++            The following code fragment shows the mapping file for the Product
++            class.  Apart from the simple field declarations, this includes a
++            simple 1:1 relation between <tt>Product</tt> and
++            <tt>ProductGroup</tt>, where every product instance is associated
++            with a <tt>ProductGroup</tt>:
++          </p>
+ 
+           <code-panel>
+     &lt;class name="myapp.Product" identity="id"&gt;
+@@ -222,7 +247,7 @@
+         <font color="red">&lt;field name="group" type="myapp.ProductGroup" &gt;
+             &lt;sql name="group_id" /&gt;
+         &lt;/field&gt;</font>
+-        
++
+         &lt;field name="details" type="myapp.ProductDetail"
+                collection="vector"&gt;
+            &lt;sql many-key="prod_id"/&gt;
+@@ -227,7 +252,7 @@
+                collection="vector"&gt;
+            &lt;sql many-key="prod_id"/&gt;
+         &lt;/field&gt;
+-        
++
+         &lt;field name="categories" type="myapp.Category" collection="vector"&gt;
+            &lt;sql name="category_id"
+                 many-table="category_prod" many-key="prod_id" /&gt;
+@@ -235,13 +260,16 @@
+ 
+     &lt;/class&gt;</code-panel>
+        </section>
+-       
++
+           <section title="1:M relation">
+-             <p>The following code fragment shows (again) the mapping file for the Product class. 
+-                The field definition highlighted shows how to declare a 1:M relation between 
+-                Product and ProductDetail, where every product instance is made up of many 
+-                ProductDetails:</p>
+-                
++             <p>
++               The following code fragment shows (again) the mapping file for
++               the <tt>Product</tt> class.  The field definition highlighted
++               shows how to declare a 1:M relation between <tt>Product</tt> and
++               <tt>ProductDetail</tt>, where every product instance is made up
++               of many <tt>ProductDetails</tt>:
++             </p>
++
+              <code-panel>
+     &lt;class name="myapp.Product" identity="id"&gt;
+ 
+@@ -262,7 +290,7 @@
+         &lt;field name="group" type="myapp.ProductGroup" &gt;
+             &lt;sql name="group_id" /&gt;
+         &lt;/field&gt;
+-        
++
+         <font color="red">&lt;field name="details" type="myapp.ProductDetail" <font color="red">collection="vector"</font>&gt;
+            &lt;sql many-key="prod_id"/&gt;
+         &lt;/field&gt;</font>
+@@ -272,11 +300,14 @@
+                 many-table="category_prod" many-key="prod_id" /&gt;
+         &lt;/field&gt;
+     &lt;/class&gt;</code-panel>
+-             
+-             <p>The following code fragment shows the corresponding mapping entry for the 
+-                ProductDetail class that defines the second leg of the 1:M relation
+-                between Product and ProductDetail.</p>
+-                
++
++             <p>
++               The following code fragment shows the corresponding mapping
++               entry for the <tt>ProductDetail</tt> class that defines the
++               second leg of the 1:M relation between <tt>Product</tt> and
++               <tt>ProductDetail</tt>.
++             </p>
++
+              <code-panel>
+   &lt;class name="myapp.ProductDetail" identity="id" depends="myapp.Product" &gt;
+ 
+@@ -297,15 +328,18 @@
+     &lt;/field&gt;</font>
+ 
+   %lt;/class&gt;</code-panel>
+- 
++
+           </section>
+-       
++
+           <section title="M:N relation">
+-             <p>The following code fragment shows (again) the mapping file for the Product class. 
+-                The field definition highlighted shows how to declare a M:N relation between 
+-                Product and ProductCategory, where many products can be mapped to many 
+-                product categories:</p>
+-                
++             <p>
++               The following code fragment shows (again) the mapping file for
++               the <tt>Product</tt> class.  The field definition highlighted
++               shows how to declare a M:N relation between <tt>Product</tt> and
++               <tt>ProductCategory</tt>, where many products can be mapped to
++               many product categories:
++             </p>
++
+              <code-panel>
+     &lt;class name="myapp.Product" identity="id"&gt;
+ 
+@@ -326,7 +360,7 @@
+         &lt;field name="group" type="myapp.ProductGroup" &gt;
+             &lt;sql name="group_id" /&gt;
+         &lt;/field&gt;
+-        
++
+         &lt;field name="details" type="myapp.ProductDetail" collection="vector"&gt;
+            &lt;sql many-key="prod_id">/&gt;
+         &lt;/field&gt;
+@@ -335,32 +369,35 @@
+            &lt;sql name="category_id"
+                 many-table="category_prod" many-key="prod_id" /&gt;
+         &lt;/field&gt;</font>
+-        
++
+     &lt;/class&gt;</code-panel>
+-             
+-             <p>The following code fragment shows the corresponding mapping entry for the 
+-                ProductCategory class that defines the second leg of the M:N relation
+-                between Product and Category.</p>
++
++             <p>
++               The following code fragment shows the corresponding mapping
++               entry for the <tt>ProductCategory</tt> class that defines the
++               second leg of the M:N relation between <tt>Product</tt> and
++               <tt>Category</tt>.
++             </p>
+ 
+              <code-panel>
+   &lt;class name="myapp.Category" identity="id"&gt;
+-  
++
+     &lt;description&gt;
+         A product category, any number of products can belong to
+         the same category, a product can belong to any number of
+-        categories
++        categories.
+     &lt;/description&gt;
+-    
++
+     &lt;map-to table="category" xml="category" /&gt;
+-    
++
+     &lt;field name="id" type="integer"&gt;
+       &lt;sql name="id" type="integer"/&gt;
+     &lt;/field&gt;
+-    
++
+     &lt;field name="name" type="string"&gt;
+       &lt;sql name="name" type="char"/&gt;
+     &lt;/field&gt;
+-    
++
+     <font color="red">&lt;field name="products" type="myapp.Product" collection="vector"&gt;
+       &lt;sql name="prod_id"
+            many-table="category_prod" many-key="category_id" /&gt;
+@@ -365,7 +402,7 @@
+       &lt;sql name="prod_id"
+            many-table="category_prod" many-key="category_id" /&gt;
+     &lt;/field&gt;</font>
+-    
++
+   &lt;/class&gt;</code-panel>
+           </section>
+ 
+@@ -371,19 +408,23 @@
+ 
+        </section>
+ 
+-	    <section title="Extend relation &amp; polymorphism">
+-	    
+-	    	 <p>As of release 0.9.9, Castor supports polymorphic queries on extend hierarchies. To highlights
+-	    	    this new feature, let's add two new classes to what we have currently.</p>
+-	    	   
+-	    	 <code-panel>
++      <section title="Extend relation &amp; polymorphism">
++
++         <p>
++           As of release 0.9.9, Castor supports polymorphic queries on extend
++           hierarchies.  (That is, hierarchies where some entities "extend"
++           other entities.)  To highlight this new feature, let's add two new
++           classes to what we have currently.
++         </p>
++
++         <code-panel>
+ package myapp;
+ 
+-public class <font color="red">Computer extends Product</font>
+-{
++public class <font color="red">Computer extends Product</font> {
++
+     private int       _id;
+ 
+-    private String    _make; 
++    private String    _make;
+ 
+     public int getId() { ... }
+ 
+@@ -395,11 +436,11 @@
+ 
+ }
+ 
+-public class <font color="red">Car extends Product</font>
+-{
++public class <font color="red">Car extends Product</font> {
++
+     private int       _id;
+ 
+-    private Date    _registeredIn; 
++    private Date    _registeredIn;
+ 
+     public int getId() { ... }
+ 
+@@ -410,14 +451,15 @@
+     public void setRegisteredIn( Date aRegisteredIn ) { ... }
+ }</code-panel>
+ 
+-          <p>The corresponding DDL statements for the relational database tables 
+-             COMP and CAR would look as follows:</p>
+-        
+-          <p><b>COMP</b>:</p>
+-          
++          <p>
++            The corresponding DDL statements for the relational database tables
++            <tt>COMP</tt> and <tt>CAR</tt> would look as follows:
++          </p>
++
++          <p><b><tt>COMP</tt></b>:</p>
++
+           <code-panel>
+-create table prod 
+-(
++create table prod (
+   id        int           not null,
+   make      varchar(200)  not null
+ );</code-panel>
+@@ -422,8 +464,8 @@
+   make      varchar(200)  not null
+ );</code-panel>
+ 
+-          <p><b>CAR</b>:</p>
+-          
++          <p><b><tt>CAR</tt></b>:</p>
++
+           <code-panel>
+ create table prod_group (
+   id        int           not null,
+@@ -430,8 +472,11 @@
+   regIn     int           not null
+ );</code-panel>
+ 
+-             <p>Based upon the mapping defined for the <tt>Product</tt> class as shown above, the 
+-          %      following code fragment shows the mapping for Computer and Car classes.</p>
++             <p>
++               Based upon the mapping defined for the <tt>Product</tt> class as
++               shown above, the following code fragment shows the mapping for
++               the <tt>Computer</tt> and <tt>Car</tt> classes.
++             </p>
+ 
+              <code-panel>
+     &lt;class name="myapp.Computer" <font color="red">extends="myapp.Product"</font> identity="id"&gt;
+@@ -445,9 +490,9 @@
+         &lt;field name="make" type="string">
+             &lt;sql name="make" type="char" />
+         &lt;/field>
+-        
++
+     &lt;/class&gt;
+-    
++
+     &lt;class name="myapp.Car" <font color="red">extends="myapp.Product"</font> identity="id"&gt;
+ 
+         &lt;map-to table="CAR" /&gt;
+@@ -459,52 +504,62 @@
+         &lt;field name="registeredIn" type="date">
+             &lt;sql name="regIn" type="long" />
+         &lt;/field>
+-        
++
+     &lt;/class&gt;</code-panel>
+-	    
+-	    	<p>Based upon this mapping, it is possible to execute the following OQL queries against 
+-	    	   this class model.</p>
+-	    	   
+-	    	<code-panel>
++
++        <p>
++          Based upon this mapping, it is possible to execute the following OQL
++          queries against this class model:
++        </p>
++
++        <code-panel>
+ OQLQuery query = d.getOQLQuery("SELECT c FROM <b>myapp.Computer</b> c");
+-	    	</code-panel>
+-	    	
+-	    	<p>to return all computers.</p>
++        </code-panel>
+ 
+-	    	<code-panel>
++        <p>To return all computers:</p>
++
++        <code-panel>
+ OQLQuery query = d.getOQLQuery("SELECT c FROM myapp.Computer c WHERE c.make = $");
+-	    	</code-panel>
+-	    	
+-	    	<p>to return all computers of a particular make.</p>
++        </code-panel>
+ 
+-	    	<code-panel>
++        <p>To return all computers of a particular make:</p>
++
++        <code-panel>
+ OQLQuery query = d.getOQLQuery("SELECT p FROM <b>myapp.Product</b> p");
+-	    	</code-panel>
+-	    	
+-	    	<p>to return all products (where Castor will return the actual object instances, i.e. a Computer
+-	    	   instance if the object returned by the query is of type <tt>Computer</tt>, or a <tt>Car</tt>
+-	    	   instance if the object returned by the query is of type <tt>Car</tt>).</p>
++        </code-panel>
+ 
+-	    	<code-panel>
++        <p>
++          To return all products (where Castor will return the actual object
++          instances, i.e. a <tt>Computer</tt> instance if the object returned
++          by the query is of type <tt>Computer</tt> or a <tt>Car</tt> instance
++          if the object returned by the query is of type <tt>Car</tt>):
++        </p>
++
++        <code-panel>
+ OQLQuery query = d.getOQLQuery("SELECT p FROM myapp.Product p WHERE p.group.name = $");
+-	    	</code-panel>
+-	    	
+-	    	<p>to return all products that belong to the specified product group (where Castor will 
+-	    	   return the actual object instances, i.e. a Computer instance if the object returned by 
+-	    	   the query is of type <tt>Computer</tt>, or a <tt>Car</tt>
+-	    	   instance if the object returned by the query is of type <tt>Car</tt>).</p>
+-	    	
+-	    </section>
+-	    
+-	    <section title="OQL samples">
+-	    
+-	    	<p>Based upon above definitions, here's a few OQL sample queries highlightig various 
+-	    	   artefacts of the OQL support of Castor JDO.</p>
+-	    	   
+-	    	<p><b>TBD</b></p>
+-	    </section>
++        </code-panel>
++
++        <p>
++          To return all products that belong to the specified product group
++          (where Castor will return the actual object instances, i.e. a
++          <tt>Computer</tt> instance if the object returned by the query is of
++          type <tt>Computer</tt> or a <tt>Car</tt> instance if the object
++          returned by the query is of type <tt>Car</tt>):
++        </p>
++
++      </section>
++
++      <section title="OQL samples">
++
++        <p>
++          Based upon above definitions, here are a few OQL sample queries that
++          highlight various artifacts of the OQL support of Castor JDO.
++        </p>
++
++        <p><b><i>To Be Written</i></b></p>
++      </section>
+ 
+     </section>
+ 
+-    </body>
+-</document>
+\ No newline at end of file
++  </body>
++</document>
+Index: doc/jdo-self-executable-examples.xml
+===================================================================
+--- doc/jdo-self-executable-examples.xml	(revision 6713)
++++ doc/jdo-self-executable-examples.xml	(working copy)
+@@ -1,65 +1,77 @@
+ <?xml version="1.0" encoding="ISO-8859-1"?>
+ <document url="http://castor.codehaus.org/jdo-self-executable-examples.xml">
+ 
+-    <properties>
+-        <title>Running the self-executable Castor JDO examples</title>
+-        <author email="werner DOT guttmann AT gmx DOT net">Werner Guttmann</author>
+-        <abstract>
+-            Outlines how to run the self-executable Castor JDO examples.
+-        </abstract>
+-        <status>Draft</status>
+-    </properties>
+-    
++  <properties>
++    <title>Running the self-executable Castor JDO examples</title>
++    <author email="werner DOT guttmann AT gmx DOT net">Werner Guttmann</author>
++    <abstract>
++      Outlines how to run the self-executable Castor JDO examples.
++    </abstract>
++    <status>Draft</status>
++  </properties>
++
+   <body>
+     <title>Running the self-executable Castor JDO examples</title>
+ 
+-    <p>As of release 1.0M3, the Castor JDO examples have been packaged in a 
+-       new way and are available for download at the 
+-       <a href="download.html">download page</a>. In the following sections, we 
+-       explain the steps required to unpack this new archive, and how to execute
+-       the tests.</p>
+-       
++    <p>
++      As of release 1.0M3, the Castor JDO examples have been packaged in a
++      new way and are available for download at the
++      <a href="download.html">download page</a>. In the following sections, we
++      explain the steps required to unpack this new archive, and how to execute
++      the tests.
++    </p>
++
+     <section title="Download the castor-$RELEASE-examples.zip archive">
+ 
+-      <p>In order to be able to run the new Castor JDO examples, please download
+-         the new castor-${RELEASE}-examples.zip from the <a href="download.html">download page</a>
+-         and put it  into some location on your computer.</p> 
++      <p>
++        In order to be able to run the new Castor JDO examples, please download
++        the new <tt>castor-</tt>${RELEASE}<tt>-examples.zip</tt> from the
++        <a href="download.html">download page</a> and put it into some location
++        on your computer.
++      </p>
+ 
+     </section>
+-    
++
+     <section title="Unpack the ZIP file">
+-        
+-        <p>To unpack the ZIP file downloaded, please issue one of the following
+-           commands:</p>
+-          
+-          <code-panel>
+-  unzip castor-1.0M3-examples.zip</code-panel> 
++
++      <p>
++        To unpack the ZIP file downloaded, issue one of the following commands:
++      </p>
++
++      <code-panel>
++  unzip castor-1.1M2-examples.zip</code-panel>
+ 
+-          <p>or</p>
++      <p>or</p>
+ 
+-          <code-panel>
+-  jar xvf castor-1.0M3-examples.zip</code-panel>
++      <code-panel>
++  jar xvf castor-1.1M2-examples.zip</code-panel>
+ 
+-          <p>You can now run the examples using the directions provided in the 
+-             next section.</p>
++      <p>
++        You can now run the examples using the directions provided in the
++        next section.
++      </p>
+ 
+     </section>
+-    
++
+     <section title="Running the Castor JDO samples">
+-    
+-        <p>In the directory where you have unpacked the ZIP file downloaded,
+-           you'll find a castor-1.0M3-examples.jar. In addition, a directory named
+-           'lib' had been created, where you'll find several JAR files required to
+-           run the samples.</p> 
+-           
+-        <p>To execute he samples, please issue the following command:</p>
+-        
+-        <code-panel>
+-  java -jar castor-1.0M3-examples.jar</code-panel>   
+-        
+-        <p>... et voila ! You'll see various lines of logging output flashing
+-           by, whilst the Castor JDO samples are executing against a database.</p>
+-           
++
++      <p>
++        In the directory where you have unpacked the ZIP file you'll find a
++        castor-1.1M2-examples.jar. In addition, you'll find a directory named
++        <tt>lib</tt> where you'll find several JAR files required to
++        run the samples.
++      </p>
++
++      <p>To execute the samples, issue the following command:</p>
++
++      <code-panel>
++  java -jar castor-1.1M2-examples.jar</code-panel>
++
++      <p>
++        ... et voila ! You'll see various lines of logging output flashing
++        by whilst the Castor JDO samples are executing against a database.
++      </p>
++
+     </section>
+ 
+     <section title="What happens">
+@@ -64,17 +76,22 @@
+ 
+     <section title="What happens">
+ 
+-      <p>The Castor JDO sample will test persistence between a set of Java classes
+-         (Product, ProductGroup, ProductDetail, etc.) and perform this code
+-         against an Apache Derby instance as RDBMS. For this purpose, the 
+-         sample code will start an embedded Derby instance on the fly, create the
+-         required tables, and then continue to execute several code fragments
+-         using various Castor JDO artefacts (JDOManager, Database, etc.) against this
+-         embedded database.</p>
+-         
+-      <p>In other words, everything is self-contained, and there is no need anymore
+-         to install a database, create a database schema and all the required tables.
+-         Everything required is initiated and setup from within the sample code.</p>
++      <p>
++        The Castor JDO sample will test persistence between a set of Java
++        classes (Product, ProductGroup, ProductDetail, etc.) and perform this
++        code against an Apache Derby instance as RDBMS. For this purpose, the
++        sample code will start an embedded Derby instance on the fly, create
++        the required tables, and then continue to execute several code
++        fragments using various Castor JDO artifacts (JDOManager, Database,
++        etc.) against this embedded database.
++      </p>
++
++      <p>
++        In other words, everything is self-contained and there is no need to
++        install a database, create a database schema, or create database tables.
++        Everything required for the tests is initiated and set up from within
++        the sample code.
++      </p>
+ 
+     </section>
+ 
+@@ -79,13 +96,15 @@
+     </section>
+ 
+     <section title="Hints">
+-        
+-        <ul>
+-            <li>If it is not set yet, you might have to set the <tt>JAVA_HOME</tt> 
+-                environment variable, and add the $JAVA_HOME/bin directory to
+-                your path.</li>
+-            
+-        </ul>
++
++      <ul>
++        <li>
++          If it is not set yet, you might have to set the <tt>JAVA_HOME</tt>
++          environment variable, and add the $JAVA_HOME/bin directory to
++          your path.
++        </li>
++      </ul>
++
+     </section>
+ 
+   </body>
+Index: doc/maven-integration.xml
+===================================================================
+--- doc/maven-integration.xml	(revision 6713)
++++ doc/maven-integration.xml	(working copy)
+@@ -17,16 +17,16 @@
+ 
+     <section title="Releases">
+ 
+-		<p>Starting with Castor 1.0.4, the Castor team has started to make <b>selected</b> 
+-	       build artefacts of Castor available at the 
+-	       <a href="http://repository.codehaus.org/">Codehaus Maven 2 repository</a>.</p>
++    <p>Starting with Castor 1.0.4, the Castor team has started to make <b>selected</b>
++       build artifacts of Castor available at the
++       <a href="http://repository.codehaus.org/">Codehaus Maven 2 repository</a>.</p>
+ 
+-		<p>To include a specific Castor release artefact in your Maven 2 project(s),
+-		   please add one of the following Maven 2 dependencies as outlined further 
+-		   below to your project POM (replacing <i>1.0.4</i> with the desired 
+-		   release number).</p>
++    <p>To include a specific Castor release artifact in your Maven 2 project(s),
++       please add one of the following Maven 2 dependencies as outlined further
++       below to your project POM (replacing <i>1.0.4</i> with the desired
++       release number).</p>
+ 
+-		<code-panel><![CDATA[
++    <code-panel><![CDATA[
+ <dependency>
+    <groupId>org.codehaus.castor</groupId>
+    <artifactId>castor</artifactId>
+@@ -33,10 +33,10 @@
+    <version>1.0.4</version>
+ </dependency>]]></code-panel>
+ 
+-		<p>and make sure you include the Codehaus Maven 2 repository in your
+-		   POM similar to ...</p>
++    <p>and make sure you include the Codehaus Maven 2 repository in your
++       POM similar to ...</p>
+ 
+-		<code-panel><![CDATA[
++    <code-panel><![CDATA[
+ <repository>
+     <id>codehaus-snapshots</id>
+     <name>Maven Codehaus Snapshots</name>
+@@ -43,30 +43,31 @@
+     <url>http://maven.codehaus.org/maven2/</url>
+ </repository>]]></code-panel>
+ 
+-		<p>Once a specific Castor release has been propagated to the main Maven 2
+-		   repository at <a href="http://www.ibiblio.org/maven2">ibiblio</a> (usually 
+-		   within 48 hours), adding just the dependency will be sufficient.</p>
++    <p>Once a specific Castor release has been propagated to the main Maven 2
++       repository at <a href="http://www.ibiblio.org/maven2">ibiblio</a> (usually
++       within 48 hours), adding just the dependency will be sufficient.</p>
++
++  </section>
+ 
+-	</section>
+-	
+-	<section title="Snapshot releases">
+-	
+-		<p>As we are working towards new releases, we will try to make snapshot releases 
+-		   available as we make progress with existing/newly created Jira 
+-		   issues. Please consult with the relevant release section at
+-		   the <a href="http://jira.codehaus.org/browse/CASTOR">raodmap</a>
+-		   to get an idea what's been fixed as part of a (planned) release.</p>
++  <section title="Snapshot releases">
+ 
+-		<p>As usual, please report any issues with these Maven 2 (snapshot)
+-		   releases through <a href="http://jira.codehaus.org/browse/CASTOR">Jira</a>.</p>
++    <p>As we are working towards new releases, we will try to make snapshot releases
++       available as we make progress with existing/newly created Jira
++       issues. Please consult with the relevant release section at
++       the <a href="http://jira.codehaus.org/browse/CASTOR">roadmap</a>
++       to get an idea what's been fixed as part of a (planned) release.</p>
++
++    <p>As usual, please report any issues with these Maven 2 (snapshot)
++       releases through <a href="http://jira.codehaus.org/browse/CASTOR">Jira</a>.</p>
+ 
+     </section>
+ 
+-    <section title="Available release artefacts">
+-        
+-        <p>The following table summarizes the build artefacts currently available
+-           through the <a href="http://repository.codehaus.org/">Codehaus Maven 2 repository</a>.</p>
+-           
++    <section title="Available release artifacts">
++
++        <p>The following table summarizes the build artifacts currently available
++           through the <a href="http://repository.codehaus.org/">Codehaus
++           Maven 2 repository</a>.</p>
++
+         <ctable>
+             <cheader>
+                 <th>Description</th>
+@@ -81,7 +82,7 @@
+    <artifactId>castor</artifactId>
+    <version>1.0.4</version>
+ </dependency>]]></pre></td>
+-				<td>1.0.4</td>
++        <td>1.0.4</td>
+             </crow>
+             <crow>
+                <td>Castor DDL generator</td>
+@@ -91,7 +92,7 @@
+    <artifactId>castor-ddlgen</artifactId>
+    <version>1.1-M2</version>
+ </dependency>]]></pre></td>
+-				<td>1.1-M2</td>
++        <td>1.1-M2</td>
+             </crow>
+             <crow>
+                <td>Castor XML code generator</td>
+@@ -101,7 +102,7 @@
+    <artifactId>castor-codegen</artifactId>
+    <version>1.1-M2</version>
+ </dependency>]]></pre></td>
+-				<td>1.1-M2</td>
++        <td>1.1-M2</td>
+             </crow>
+             <crow>
+                <td>Ant task definition for Castor XML code generator</td>
+@@ -111,13 +112,13 @@
+    <artifactId>castor-codegen-anttask</artifactId>
+    <version>1.1-M2</version>
+ </dependency>]]></pre></td>
+-				<td>1.1-M2</td>
++        <td>1.1-M2</td>
+             </crow>
+         </ctable>
+-        
+-        <p>Until these build artefacts have been propagated to the 
++
++        <p>Until these build artifacts have been propagated to the
+            <a href="http://www.ibiblio.org/maven2">main Maven 2 repository</a>,
+-           please make sure that your project POMS include the following 
++           please make sure that your project POMS include the following
+            <tt>&lt;repository&gt;</tt> definition:</p>
+ 
+             <source><![CDATA[
+@@ -123,8 +124,8 @@
+             <source><![CDATA[
+ <repository>
+     <id>codehaus-repository</id>
+-    <name>Codehaus Maven 2 repository</name> 
+-    <url>http://maven.codehaus.org/maven2/</url> 
++    <name>Codehaus Maven 2 repository</name>
++    <url>http://maven.codehaus.org/maven2/</url>
+ </repository>]]></source>
+ 
+     </section>
+@@ -129,11 +130,12 @@
+ 
+     </section>
+ 
+-    <section title="Available snapshot release artefacts">
+-        
+-        <p>The following table summarizes the build artefacts currently available
+-           through the <a href="http://snapshots.repository.codehaus.org/">Codehaus Maven 2 snapshot repository</a>.</p>
+-           
++    <section title="Available snapshot release artifacts">
++
++        <p>The following table summarizes the build artifacts currently available
++           through the <a href="http://snapshots.repository.codehaus.org/">Codehaus
++           Maven 2 snapshot repository</a>.</p>
++
+         <ctable>
+             <cheader>
+                 <th>Description</th>
+@@ -148,7 +150,7 @@
+    <artifactId>castor</artifactId>
+    <version>1.0.5-SNAPSHOT</version>
+ </dependency>]]></pre></td>
+-				<td>1.0.5-SNAPSHOT</td>
++        <td>1.0.5-SNAPSHOT</td>
+             </crow>
+             <crow>
+                <td>Castor DDL generator</td>
+@@ -158,7 +160,7 @@
+    <artifactId>castor-ddlgen</artifactId>
+    <version>1.1-M2-SNAPSHOT</version>
+ </dependency>]]></pre></td>
+-				<td>1.1-M2-SNAPSHOT</td>
++        <td>1.1-M2-SNAPSHOT</td>
+             </crow>
+             <crow>
+                <td>Castor XML code generator</td>
+@@ -168,7 +170,7 @@
+    <artifactId>castor-codegen</artifactId>
+    <version>1.1-M2-SNAPSHOT</version>
+ </dependency>]]></pre></td>
+-				<td>1.1-M2_SNAPSHOT</td>
++        <td>1.1-M2_SNAPSHOT</td>
+             </crow>
+             <crow>
+                <td>Ant task definition for Castor XML code generator</td>
+@@ -178,7 +180,7 @@
+    <artifactId>castor-codegen-anttask</artifactId>
+    <version>1.1-M2-SNAPSHOT</version>
+ </dependency>]]></pre></td>
+-				<td>1.1-M2-SNAPSHOT</td>
++        <td>1.1-M2-SNAPSHOT</td>
+             </crow>
+             <crow>
+                <td>Castor XML Spring factory beans</td>
+@@ -188,7 +190,7 @@
+    <artifactId>spring-xml</artifactId>
+    <version>1.0-SNAPSHOT</version>
+ </dependency>]]></pre></td>
+-				<td>-</td>
++        <td>-</td>
+             </crow>
+             <crow>
+                <td>Spring ORM for Castor JDO</td>
+@@ -198,11 +200,11 @@
+    <artifactId>castor-spring</artifactId>
+    <version>1.0-SNAPSHOT</version>
+ </dependency>]]></pre></td>
+-				<td>-</td>
++        <td>-</td>
+             </crow>
+         </ctable>
+-        
+-        <p>For those artefacts available as <b>snapshot</b> releases only, please make sure
++
++        <p>For those artifacts available as <b>snapshot</b> releases only, please make sure
+            that your project POMS include the following <tt>&lt;repository&gt;</tt>
+            definition:</p>
+ 
+@@ -209,8 +211,8 @@
+             <source><![CDATA[
+ <repository>
+     <id>codehaus-snapshots</id>
+-    <name>Maven Codehaus Snapshots</name> 
+-    <url>http://snapshots.maven.codehaus.org/maven2/</url> 
++    <name>Maven Codehaus Snapshots</name>
++    <url>http://snapshots.maven.codehaus.org/maven2/</url>
+ </repository>]]></source>
+ 
+     </section>
+@@ -218,4 +220,3 @@
+   </body>
+ 
+ </document>
+-
+Index: doc/new-license.xml
+===================================================================
+--- doc/new-license.xml	(revision 6713)
++++ doc/new-license.xml	(working copy)
+@@ -7,10 +7,14 @@
+ 
+     <section title="">
+ 
+-    <p>New artefacts of this project (including refcatored ones that have changed substantially) will be 
+-	   released under Apache 2.0-style license [<a href="license.txt">license.txt</a>]:</p>
++    <p>
++      New artifacts of this project (including refactored ones that have
++      changed substantially) will be released under Apache 2.0-style license
++      [<a href="license.txt">license.txt</a>]:
++    </p>
++
+     <pre>
+-Copyright 2004-2005 &lt;&lt;copyright holder&gt;&gt;
++Copyright 2004-2007 &lt;&lt;copyright holder&gt;&gt;
+ 
+ Licensed under the Apache License, Version 2.0 (the "License");
+ you may not use this file except in compliance with the License.
+Index: doc/release-notes-1.0-to-0.9.7.xml
+===================================================================
+--- doc/release-notes-1.0-to-0.9.7.xml	(revision 6713)
++++ doc/release-notes-1.0-to-0.9.7.xml	(working copy)
+@@ -640,7 +640,7 @@
+                    context of source generation) a result of a &lt;complexType&gt; definition or an
+                    &lt;element&gt; declaration. This is particularly relevant for tool providers who need to
+                    integrate with Castor XML, and as a result of this addition can now use the new
+-                   <tt>isElementDefinition()</tt> method to query an artefact's state.</p>
++                   <tt>isElementDefinition()</tt> method to query an artifact's state.</p>
+ 
+                 <h3>New XML HOW-TOs added</h3>
+ 
+Index: doc/release-notes.xml
+===================================================================
+--- doc/release-notes.xml	(revision 6714)
++++ doc/release-notes.xml	(working copy)
+@@ -34,6 +34,26 @@
+             <summary>
+             </summary>
+             <bugs>
++                <bug id="1808" tool="jira">
++                    <description>
++                        Cleanup of misc documentation
++                    </description>
++                    <contributor>
++                        <name>Edward Kuns</name>
++                        <email>edward.kuns@aspect.com</email>
++                    </contributor>
++                    <submitter>
++                        <name>Edward Kuns</name>
++                        <email>edward.kuns@aspect.com</email>
++                    </submitter>
++                    <reporter>
++                        <name>Edward Kuns</name>
++                        <email>edward.kuns@aspect.com</email>
++                    </reporter>
++                    <type>Enh</type>
++                    <module>Doc</module>
++                    <date>20070103</date>
++                </bug>
+                 <bug id="1807" tool="jira">
+                     <description>
+                         Add RSS feed link to index + news page
+Index: doc/srcgen-properties.xml
+===================================================================
+--- doc/srcgen-properties.xml	(revision 6713)
++++ doc/srcgen-properties.xml	(working copy)
+@@ -15,125 +15,125 @@
+ 
+     <title>Castor XML - Code generator properties</title>
+ 
+-		<section title="Overview">
+-		
++    <section title="Overview">
++
+             <p>Please find below a list of properties that can be set in the
+                <tt>castor-builder.properties</tt> file to control various advanced
+-               options of the source generator. By default, the Castor XML code 
++               options of the source generator. By default, the Castor XML code
+                will look for such a property file in the following places:</p>
+-               
++
+             <p><ol>
+-            	<li>If no custom property file is specified, the Castor XML code
+-            	    generator will use the default builder configuration
+-            	    properties at 
+-            	    <tt>org/exolab/castor/builder/castorbuilder.properties</tt>.</li>
+-            	<li>If a file named <tt>castorbuilder.properties</tt> is available
+-            	    on the CLASSPATH, the Castor XML code generator will use each of the
+-            	    defined property values to override the default value as explained 
+-            	    above. This fiel is commonly referred to as a <b>custom</b>
+-            	    builder configuration file.</li> 
++              <li>If no custom property file is specified, the Castor XML code
++                  generator will use the default builder configuration
++                  properties at
++                  <tt>org/exolab/castor/builder/castorbuilder.properties</tt>.</li>
++              <li>If a file named <tt>castorbuilder.properties</tt> is available
++                  on the CLASSPATH, the Castor XML code generator will use each of the
++                  defined property values to override the default value as explained
++                  above. This fiel is commonly referred to as a <b>custom</b>
++                  builder configuration file.</li>
+             </ol></p>
+-            
++
+             <ctable>
+-            	<cheader>
+-	               <th align="center">Option</th>
+-	               <th>Description</th>
+-	               <th>Values</th>
+-	               <th>Default</th>
+-	               <th>Since<br/>Version</th>
+-            	</cheader>
+-            	<crow>
+-            		<td>org.exolab.castor.builder.javaVersion</td>
+-            		<td>Compliance with Java version</td>
+-            		<td><tt>1.4</tt> or <tt>5.0</tt></td>
+-            		<td>1.4</td>
+-            		<td>1.0.2</td>
+-            	</crow>
+-            	<crow>
+-            		<td>org.exolab.castor.builder.boundproperties</td>
+-            		<td>Generation of bound properties</td>
+-            		<td><tt>true</tt> or <tt>false</tt></td>
+-            		<td><tt>false</tt></td>
+-            		<td>0.8.9</td>
+-            	</crow>
+-            	<crow>
+-            		<td>org.exolab.castor.builder.javaclassmapping</td>
+-            		<td>Class generation mode</td>
+-            		<td><tt>element</tt> or <tt>type</tt></td>
+-            		<td><tt>element</tt></td>
+-            		<td>0.9.1</td>
+-            	</crow>
+-            	<crow>
+-            		<td>org.exolab.castor.builder.superclass</td>
+-            		<td>Global super class (for all classes generated)</td>
+-            		<td>Any valid class name</td>
+-            		<td>-</td>
+-            		<td>0.8.9</td>
+-            	</crow>
+-            	<crow>
+-            		<td>org.exolab.castor.builder.nspackages</td>
+-            		<td>XML namespace to package name mapping</td>
+-            		<td>A series of mappings</td>
+-            		<td>-</td>
+-            		<td>0.8.9</td>
+-            	</crow>
+-            	<crow>
+-            		<td>org.exolab.castor.builder.equalsmethod</td>
+-            		<td>Generation of <tt>equals</tt> method</td>
+-            		<td><tt>true</tt> or <tt>false</tt></td>
+-            		<td><tt>false</tt></td>
+-            		<td>0.9.1</td>
+-            	</crow>
+-            	<crow>
+-            		<td>org.exolab.castor.builder.primitivetowrapper</td>
+-            		<td>Generation of Object wrappers instead of primitives</td>
+-            		<td><tt>true</tt> or <tt>false</tt></td>
+-            		<td><tt>false</tt></td>
+-            		<td>0.9.4</td>
+-            	</crow>
++              <cheader>
++                 <th align="center">Option</th>
++                 <th>Description</th>
++                 <th>Values</th>
++                 <th>Default</th>
++                 <th>Since<br/>Version</th>
++              </cheader>
++              <crow>
++                <td>org.exolab.castor.builder.javaVersion</td>
++                <td>Compliance with Java version</td>
++                <td><tt>1.4</tt> or <tt>5.0</tt></td>
++                <td>1.4</td>
++                <td>1.0.2</td>
++              </crow>
++              <crow>
++                <td>org.exolab.castor.builder.boundproperties</td>
++                <td>Generation of bound properties</td>
++                <td><tt>true</tt> or <tt>false</tt></td>
++                <td><tt>false</tt></td>
++                <td>0.8.9</td>
++              </crow>
++              <crow>
++                <td>org.exolab.castor.builder.javaclassmapping</td>
++                <td>Class generation mode</td>
++                <td><tt>element</tt> or <tt>type</tt></td>
++                <td><tt>element</tt></td>
++                <td>0.9.1</td>
++              </crow>
++              <crow>
++                <td>org.exolab.castor.builder.superclass</td>
++                <td>Global super class (for all classes generated)</td>
++                <td>Any valid class name</td>
++                <td>-</td>
++                <td>0.8.9</td>
++              </crow>
++              <crow>
++                <td>org.exolab.castor.builder.nspackages</td>
++                <td>XML namespace to package name mapping</td>
++                <td>A series of mappings</td>
++                <td>-</td>
++                <td>0.8.9</td>
++              </crow>
++              <crow>
++                <td>org.exolab.castor.builder.equalsmethod</td>
++                <td>Generation of <tt>equals</tt> method</td>
++                <td><tt>true</tt> or <tt>false</tt></td>
++                <td><tt>false</tt></td>
++                <td>0.9.1</td>
++              </crow>
++              <crow>
++                <td>org.exolab.castor.builder.primitivetowrapper</td>
++                <td>Generation of Object wrappers instead of primitives</td>
++                <td><tt>true</tt> or <tt>false</tt></td>
++                <td><tt>false</tt></td>
++                <td>0.9.4</td>
++              </crow>
+             </ctable>
+-            
+-		</section>
++
++    </section>
+ 
+        <section title="Available properties">
+-                       
+-		    <section title="News: Source generation &amp; Java 5.0">
+-		
+-		        <p>As of <b>Castor 1.0.2</b>, the Castor source generator now supports the 
+-		           generation of Java 5.0 compliant code. The generated code - with the 
+-		           new feature enabled - will make use of the following Java 5.0-specific
+-		           artefacts:
+-		           
+-		           <ul>
+-		            <li>Use of parameterized collections, e.g. ArrayList&lt;String&gt;.</li>
+-		            <li>Use of @Override annotations with the generated methods 
+-		                that require it.</li>
+-		            <li>Use of @SupressWarnings with "unused" method parameters 
+-		                on the generated methods that needed it.</li>
+-		            <li>Added "enum" to the list of reserved keywords.</li>
+-		           </ul></p>
+-		                   
+-		        <p>To enable this feature (off by default), please uncomment the
+-		           following property in your custom <tt>castorbuilder.properties</tt>
+-		           file:</p>
+-		                   
+-		        <code-panel>
+-		# This property specifies whether the sources generated
+-		# should comply with java 1.4 or 5.0; defaults to 1.4
+-		org.exolab.castor.builder.javaVersion=5.0
+-		        </code-panel>
+-		                
+-		    </section>
+-		    
++
++        <section title="News: Source generation &amp; Java 5.0">
++
++            <p>As of <b>Castor 1.0.2</b>, the Castor source generator now supports the
++               generation of Java 5.0 compliant code. The generated code - with the
++               new feature enabled - will make use of the following Java 5.0-specific
++               artifacts:
++
++               <ul>
++                <li>Use of parameterized collections, e.g. ArrayList&lt;String&gt;.</li>
++                <li>Use of @Override annotations with the generated methods
++                    that require it.</li>
++                <li>Use of @SupressWarnings with "unused" method parameters
++                    on the generated methods that needed it.</li>
++                <li>Added "enum" to the list of reserved keywords.</li>
++               </ul></p>
++
++            <p>To enable this feature (off by default), please uncomment the
++               following property in your custom <tt>castorbuilder.properties</tt>
++               file:</p>
++
++            <code-panel>
++    # This property specifies whether the sources generated
++    # should comply with java 1.4 or 5.0; defaults to 1.4
++    org.exolab.castor.builder.javaVersion=5.0
++            </code-panel>
++
++        </section>
++
+             <section title="Bound Properties">
+ 
+-                <p>Bound properties are "properties" of a class, which when 
+-                   updated the class will send out a <api>java.beans.PropertyChangeEvent</api> 
++                <p>Bound properties are "properties" of a class, which when
++                   updated the class will send out a <api>java.beans.PropertyChangeEvent</api>
+                    to all registered <api>java.beans.PropertyChangeListeners</api>.</p>
+-                   
+-                <p>To enable bound properties, please add the following property definition 
++
++                <p>To enable bound properties, please add the following property definition
+                    to your custom builder configuration file:</p>
+-                   
++
+                 <code-panel>
+ # To enable bound properties uncomment the following line. Please
+ # note that currently *all* fields will be treated as bound properties
+@@ -142,10 +142,10 @@
+ #
+ org.exolab.castor.builder.boundproperties=true</code-panel>
+ 
+-                <p>When enabled, <b>all</b> properties will be treated as bound properties. For 
+-                   each class that is generated a <tt>setPropertyChangeListener</tt> method is 
++                <p>When enabled, <b>all</b> properties will be treated as bound properties. For
++                   each class that is generated a <tt>setPropertyChangeListener</tt> method is
+                    created as follows:</p>
+-                
++
+                 <code-panel>
+ <comment>
+ /**
+@@ -157,35 +157,35 @@
+ {
+    propertyChangeListeners.addElement(pcl);
+ } //-- void addPropertyChangeListener</code-panel>
+-    
+-                <p>Whenever a property of the class is changed, a 
+-                   <api>java.beans.PropertyChangeEvent</api> will be sent to 
+-                   all registered listeners. The property name, the old value and 
++
++                <p>Whenever a property of the class is changed, a
++                   <api>java.beans.PropertyChangeEvent</api> will be sent to
++                   all registered listeners. The property name, the old value and
+                    the new value will be set in the <b>java.beans.PropertyChangeEvent</b>.</p>
+-                    
+-                <note>To prevent unnecessary overhead, if the property is a collection, 
++
++                <note>To prevent unnecessary overhead, if the property is a collection,
+                       the old value will be <i>null</i>.</note>
+-                   
++
+          </section>
+-            
++
+          <section title="Class Creation/Mapping">
+ 
+             <p>The source generator can treat the XML Schema structures such as &lt;complexType&gt;
+-               and element in two main ways. The first, and current default method is called the 
++               and element in two main ways. The first, and current default method is called the
+                "element" method. The other is called the "type" method.</p>
+-               
++
+             <ctable>
+-            	<cheader>
+-            		<th>Method</th>
+-            		<th>Explanation</th>
+-            	</cheader>
+-            	<crow>
+-            		<td valign="top">'element'</td>
+-            		<td valign="top">
+-               			   The "element" method creates classes for all elements whose type is a 
+-                           &lt;complexType&gt;. Abstract classes are created for all top-level 
+-                           &lt;complexType&gt;s. Any elements whose type is a top-level type will have 
+-                           a new class create that extends the abstract class which was generated for 
++              <cheader>
++                <th>Method</th>
++                <th>Explanation</th>
++              </cheader>
++              <crow>
++                <td valign="top">'element'</td>
++                <td valign="top">
++                        The "element" method creates classes for all elements whose type is a
++                           &lt;complexType&gt;. Abstract classes are created for all top-level
++                           &lt;complexType&gt;s. Any elements whose type is a top-level type will have
++                           a new class create that extends the abstract class which was generated for
+                            that top-level complexType.<br/>
+                            Classes are not created for elements whose type is a &lt;simpleType&gt;.
+                     </td>
+@@ -191,8 +191,8 @@
+                     </td>
+                 </crow>
+                 <crow>
+-                	<td valign="top">'type'</td>
+-                	<td valign="top">
++                  <td valign="top">'type'</td>
++                  <td valign="top">
+                            The "type" method creates classes for all top-level &lt;complexType&gt;s, or
+                            elements that contain an "anonymous" (in-lined) &lt;complexType&gt;.<br/>
+                            Classes will not be generated for elements whose type is a top-level
+@@ -200,10 +200,10 @@
+                     </td>
+                 </crow>
+             </ctable>
+-            
+-            <p>To change the "method" of class creation, please add the following property 
++
++            <p>To change the "method" of class creation, please add the following property
+                definition to your custom builder configuration file:</p>
+-               
++
+             <code-panel>
+ # Java class mapping of &lt;xsd:element&gt;'s and &lt;xsd:complexType&gt;'s
+ #
+@@ -211,15 +211,15 @@
+          </section>
+ 
+          <section title="Setting a super class">
+-         
++
+             <p>The source generator enables the user to set a super class to <b>all</b> the
+                generated classes (of course, class descriptors are not affected
+-               by this option). Pleae note that, though the binding file, it is possible 
++               by this option). Pleae note that, though the binding file, it is possible
+                to define a super class for individual classes</p>
+-                
+-            <p>To set the global super class, please add the following property 
++
++            <p>To set the global super class, please add the following property
+                definition to your custom builder configuration file:</p>
+-               
++
+             <code-panel>
+ # This property allows one to specify the super class of *all*
+ # generated classes
+@@ -229,7 +229,7 @@
+         </section>
+ 
+         <section title="Mapping XML namespaces to Java packages" sub-title="Schema Imports">
+-        
++
+             <p>
+                 An XML Schema instance is identified by a namespace. For data-binding purposes,
+                 especially code generation it may be necessary to map namespaces to Java packages.
+@@ -267,19 +267,19 @@
+         <section title="Maps java primitive types to wrapper object">
+              <p>Since version 0.9.4</p>
+              <p>
+-		It may be convenient to use java objects instead of primitives,
+-		the Source Generator provides a way to do it. Thus the following mapping can be used:
+-		<ul>
+-			<li>boolean to java.lang.Boolean</li>
+-			<li>byte to java.lang.Byte</li>
+-			<li>double to java.lang.Double</li>
+-			<li>float to java.lang.Float</li>
+-			<li>int and integer to java.lang.Integer</li>
+-			<li>long to java.lang.Long</li>
+-			<li>short to java.lang.Short</li>
+-		</ul>
+-	     </p>
+- 	     <p>To enable this property, edit the castor builder.properties file:
++    It may be convenient to use java objects instead of primitives,
++    the Source Generator provides a way to do it. Thus the following mapping can be used:
++    <ul>
++      <li>boolean to java.lang.Boolean</li>
++      <li>byte to java.lang.Byte</li>
++      <li>double to java.lang.Double</li>
++      <li>float to java.lang.Float</li>
++      <li>int and integer to java.lang.Integer</li>
++      <li>long to java.lang.Long</li>
++      <li>short to java.lang.Short</li>
++    </ul>
++       </p>
++        <p>To enable this property, edit the castor builder.properties file:
+         <code-panel>
+ # Set to true if you want to use Object Wrappers instead
+ # of primitives (e.g Float instead of float).
+@@ -285,11 +285,11 @@
+ # of primitives (e.g Float instead of float).
+ # false by default.
+ #org.exolab.castor.builder.primitivetowrapper=false</code-panel>
+-	     </p>
+-	     
+-	   </section>
++       </p>
+ 
+-	</section>
++     </section>
++
++  </section>
+ 
+   </body>
+ 
