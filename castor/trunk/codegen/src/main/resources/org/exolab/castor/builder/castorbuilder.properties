#
# Property file for SourceCodeGenerator
#
# $Id$

# Enables bound properties (property change listener notification upon change).
# Note that *all* fields will currently be treated as bound properties if this
# is enabled.  This will change in the future when we introduce finely-grained
# control over each class and its properties.
# Default is false.
#
#org.exolab.castor.builder.boundproperties=true

# Selects the Java class mapping for <xsd:element>'s and <xsd:complexType>'s.
# Legal values are 'element' and 'type'.  For 'element' mapping, the source
# generator creates a Java class hierarchy based on elements in the XML Schema.
# For 'type' mapping, the class hierarchy is based on types in the XML Schema.
# Default is 'element'.
#
#org.exolab.castor.builder.javaclassmapping=element

# Specifies a super class for *all* generated classes.
# By default the generated classes do not extend another class.
#
#org.exolab.castor.builder.superclass=com.xyz.BaseObject

# Specifies an XML namespace to Java package mapping.
# There is no default mapping.
#
#org.exolab.castor.builder.nspackages=\
  http://www.xyz.com/schemas/project=com.xyz.schemas.project,\
  http://www.xyz.com/schemas/person=com.xyz.schemas.person

# Enables generation of equals() and hashCode() methods for each generated
# class.  If not enabled, these methods are not generated.
# False by default.
#
#org.exolab.castor.builder.equalsmethod=true

# Selects use of Object Wrappers instead of primitives (e.g java.lang.Float
# instead of float).
# False by default.
#
#org.exolab.castor.builder.primitivetowrapper=false

# Set to true if you want the generated class descriptors to publicly expose
# the element and attribute names they contain.  Best practices generally
# discourage this, so only enable this feature if it is truly needed.
# False by default.
#
#org.exolab.castor.builder.classdescfieldnames=false

# Enables generation of extra methods for collection fields, such as get/set by
# reference and set as copy.  Extra methods are in addition to the usual
# collection get/set methods.  Set this to true if you want your code to be
# more compatible  with Castor JDO.
# False by default.
#
#org.exolab.castor.builder.extraCollectionMethods=true

# Selects old-style (Castor 0.9.3.9 and earlier) naming that uppercases names
# after an underscore.  For new implementations, this is usually not useful.
# False by default.
#
#org.exolab.castor.xml.JavaNaming.upperCaseAfterUnderscore=true

# Specifies whether generated enumeration type classes should implement the
# org.exolab.castor.types.EnumeratedTypeAccess interface.
# False by default.
#
#org.exolab.castor.builder.enumTypeAccessInterface=true

# Specifies whether the sources generated should be source compatible with
# Java 1.4 or Java 5.  Legal values are "1.4" and "5.0".  When "5.0" is
# selected, generated source will use Java 5 features such as generics and
# annotations.
# Defaults to "1.4".
#
#org.exolab.castor.builder.javaVersion=5.0

# Specifies the maximum number of (enumeration) constant definitions to be
# allowed in a single generated source file.  The JVM has limits on the
# (compiled) size of a single method and on the number of entries in the
# constant pool for a class.  This setting prevents a generated enumeration
# class from containing so many constants that it cannot compile.
# Default is 1000.
#org.exolab.castor.builder.maxNumberOfConstants=1000

# Configures how to handle name conflicts within a Schema (such as a complex
# type and a global element with the same name).  When name conflicts occur,
# Castor will use the first listed conflict resolution strategy to decide what
# to do.  Current choices are warn-and-ask-user-what-to-do and log-and-ignore.
# More choices may be offered in the future.
# Default is as configured below.
#
org.exolab.castor.builder.nameConflictStrategies=\
   org.exolab.castor.builder.conflictresolution.WarningViaDialogClassNameCRStrategy,\
   org.exolab.castor.builder.conflictresolution.InformViaLogClassNameCRStrategy

# Specifies whether automatic class name conflict resolution
# should be used or not; defaults to false.
#
org.exolab.castor.builder.automaticConflictResolution=false
