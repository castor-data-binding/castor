<project name="Castor XML - Core module" default="compile" basedir=".">

    <property environment="env" />
    <property name="source"               value="${basedir}/src"/>
    <property name="main.java"            value="${source}/main/java"/>
    <property name="main.resources"       value="${source}/main/resources"/>
	<property name="test.java"            value="${source}/test/java"/>
    <property name="test.resources"       value="${source}/test/resources"/>
    <property name="main.generated"       value="${basedir}/target/generated-sources/castor"/>
    <property name="build"                value="${basedir}/build"/>
    <property name="classes"              value="${build}/classes"/>
	<property name="test.classes"         value="${build}/test"/>
    <property name="archive"              value="${project}-${version}${release}"/>
    <property name="gen.src"              value="${build}/generated-sources"/>

    <path id="build.classpath">
        <pathelement location="${basedir}/build/classes"/>
    	<pathelement location="${basedir}/../lib/commons-logging-1.1.jar"/>
    	<pathelement location="${basedir}/../lib/junit_3.8.2.jar"/>
    </path>

    <path id="test.classpath">
    	<path refid="build.classpath" />
        <pathelement location="${basedir}/build/test"/>
    </path>

    <target name="prepare" unless="prepare.executed">
        <mkdir dir="${build}"/>
        <mkdir dir="${classes}"/>
        <property name="prepare.executed" value="true"/>
    </target>

    <target name="clean" description="Removes build directory">
        <delete dir="${build}"/>
    </target>

    <target name="clean.tests" description="Removes test build directory">
        <delete dir="${test.classes}"/>
    </target>

    <target name="compile" depends="prepare" description="Compile sources">
        <javac srcdir="${main.java}" destdir="${classes}" 
               debug="on" encoding="ISO-8859-1" deprecation="false"
        	   source="1.5" target="1.5">
            <classpath refid="build.classpath"/>
        </javac>
        <javac srcdir="${main.generated}" destdir="${classes}" 
               debug="on" encoding="ISO-8859-1" deprecation="false"
               source="1.5" target="1.5">
            <classpath refid="build.classpath"/>
        </javac>
        <copy todir="${classes}">
            <fileset dir="${main.resources}">
                <include name="**"/>
            </fileset>
            <fileset dir="${main.generated}">
                <include name="**/*.cdr"/>
            </fileset>
            <filterset begintoken="$$" endtoken="$$">
	            <filter token="VERSION" value="${version}"/>
	            <filter token="RELEASE" value="${release}"/>
            </filterset>
        </copy>
    </target>

    <target name="jar" depends="compile" description="Build JAR file">
        <jar jarfile="${build}/${archive}.jar" 
             manifest="${classes}/META-INF/MANIFEST.MF">
        	<fileset dir="${classes}">
        		<include name="**" />
        	</fileset>
        </jar>
        <copy file="${build}/${archive}.jar" tofile="${basedir}/../dist/${archive}.jar"/>
    </target>

    <target name="compile.bugs" depends="compile" 
    	    description="Build the tests packages">
        <mkdir dir="${test.classes}"/>
        <javac srcdir="${test.java}" destdir="${test.classes}"
               debug="on" encoding="ISO-8859-1" deprecation="${deprecation}"
        	   source="1.5" target="1.5">
            <classpath refid="build.classpath"/>
        </javac>

        <copy todir="${test.classes}">
            <fileset dir="${test.resources}"/>
        </copy>
    </target>
	
	<target name="tests" description="Runs JUnit tests" depends="compile.bugs">
		<junit printsummary="true">
			<formatter type="plain" />
			<batchtest>
				<fileset dir="${test.classes}">
					<include name="**/Test*"/>
					<include name="**/*Test"/>
				</fileset>
			</batchtest>
			<classpath refid="test.classpath" />
		</junit>
	</target>

</project>
