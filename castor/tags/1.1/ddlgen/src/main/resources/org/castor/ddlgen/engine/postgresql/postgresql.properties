# Date: Jun 03, 2006
# Author: Le Duc Bao
# email: leducbao AT gmail DOT com
#
# configuration properties file for PostgreSQL DDL generator

# 
# key generator factory classes of supported database engines
# 
org.castor.ddlgen.KeyGeneratorFactories=\
  org.castor.ddlgen.keygenerator.HighLowKeyGeneratorFactory,\
  org.castor.ddlgen.keygenerator.IdentityKeyGeneratorFactory,\
  org.castor.ddlgen.keygenerator.MaxKeyGeneratorFactory,\
  org.castor.ddlgen.keygenerator.UUIDKeyGeneratorFactory,\
  org.castor.ddlgen.engine.postgresql.PostgresqlSequenceKeyGeneratorFactory

#
# header comment
#
org.castor.ddlgen.HeaderComment=

#
# trigger template
#
org.castor.ddlgen.TriggerTemplate=\
CREATE FUNCTION FUN_<sequence_name>()\n\t\
	RETURNS TRIGGER AS $FUN_<sequence_name>$\n\t\
	DECLARE\n\t\t\
		iCounter <table_name>.<pk_name>%TYPE;\n\t\
	BEGIN\n\t\t\
		IF (TG_OP = 'INSERT') THEN\n\t\t\t\
			SELECT INTO iCounter NEXTVAL('<sequence_name>');\n\t\t\t\
			NEW.<pk_name> := iCounter;\n\t\t\
		END IF;\n\
\n\t\t\
		IF (TG_OP = 'UPDATE') THEN\n\t\t\t\
			IF (NEW.<pk_name> != OLD.<pk_name>) THEN\n\t\t\t\t\
				RAISE EXCEPTION '% Cannot Change Counter Value', -2000;\n\t\t\t\
			END IF;\n\t\t\
		END IF;\n\
\n\t\t\
	RETURN NEW;\n\t\
END;\n\
\n\
$FUN_<sequence_name>$ LANGUAGE plpgsql\n\
\n\
CREATE TRIGGER <trigger_name>\n\t\
	BEFORE INSERT OR UPDATE ON <table_name>\n\t\
	FOR EACH ROW EXECUTE PROCEDURE FUN_<sequence_name>();\n
