<?xml version="1.0" encoding="ISO-8859-1"?>
<document url="http://castor.org/tutorial/how-to-sumit-a-bug/main.xml">
  <properties>
    <title>Submitting a bug report</title>
    <abstract>
       General information about submitting a bug report
    </abstract>
    <status>Final</status>
  </properties>
  <body>
    <title>Submitting a bug report</title>

	<section title="Submitting a problem report">

		<section title="Driver">
			<p>Most of the traffic on the Castor Users mailing list is about people asking for help on 
			   various features of Castor (whether JDO or XML). Whilst there is nothing wrong about asking 
			   questions and looking for help if you are stuck, it seems that there is room to improve the structure 
			   of this 'conversation'.</p>
				
			<p>If you have a look at some of these threads (e.g. at the 
			   <a class="external" href="http://www.mail-archive.com/castor-dev%40exolab.org">searchable mailing list archive</a>), 
				it's quite easy to see that most of the time ...</p>
					
			<ol>
				<li><p>An initial question is posted.</p></li>
				<li><p>An initial reply is posted with some follow-up questions, e.g. request for 
				     code fragments, mapping files, etc.</p></li>
				<li><p>One or more code fragments, mapping files, etc. are being posted.</p></li>
				<li><p>etc.</p></li>
			</ol>
			
			<p>This document will establish guidelines with regards to step 3) above.</p>
	
		</section>
		
		<section title="Introduction">
			
			<p>This document provides step-by-step instructions on how to submit a problem 
			  report (when being asked to do so). It does so by walking you through a fictive
			  problem and its resulting bug report, and providing instructions based upon this 
			  scenario.</p>
				
			<p>Per definition, any problem report submitted (in other words, most likely attached 
			   to a bug report at http://jira.codehaus.org/browse/CASTOR) by the means of a patch has to 
			   include the following artefacts:</p>
				
			<ul>
				<li>A JUnit test case that 'showcases' your problem.</li>
				<li>Castor JDO configuration file.</li>
				<li>Castor JDO mapping file.</li>
				<li>One or more 'entity' classes required to run your test case.</li>
				<li>A SQL schema file (to help in the creation of required tables).</li>
				<li>A <tt>README</tt> file (with any additional information/instructions required to understand
				     /run your test case.</li>
			</ul>
	
			<p><b>Note</b>: Whilst we can and will not impose these guidelines in their strictest 
			   sense, I think that the use of technologies such as JUnit will simplify problem 
			   resolution and as a result lead to shorter turn-around times. Which is ultimately where 
			   you, the user, gains..</p>
			   
		</section>			
			
		<section title="Templates">
				
				<p>To facilitate creation of a fully featured patch as discussed above, we have 
				   provided you with an already existing bug template at 'src/bugs/jdo/template'.</p>
				   
				<p><b>Note:</b>Please note that this directory is distributed only as part of the 
				   source archive(s).</p>
					
				<p>This directory holds all artefacts mentioned above, as is structured as follows:</p>
				   
				<ctable cellpadding="3">	
                    <crow><td><i>src</i></td><td>Source code</td></crow>
                    <crow><td><i>src/bugs</i></td><td>Common root for bug reports</td></crow>
                    <crow><td><i>src/bugs/jdo</i></td><td>Common root for JDO bug reports</td></crow>
                    <crow><td><i>src/bugs/jdo/template</i></td><td>Patch template</td></crow>
                    <crow><td>src/bugs/jdo/template/TestTemplate.java</td><td>JUnit test case.</td></crow>
                    <crow><td>src/bugs/jdo/template/EntityOne.java</td><td>Entity required by the test case</td></crow>
                    <crow><td>src/bugs/jdo/template/jdo-conf.xml</td><td>Castor JDO configuration</td></crow>
                    <crow><td>src/bugs/jdo/template/mapping.xml</td><td>Castor mapping file</td></crow>
                    <crow><td>src/bugs/jdo/template/create.sql</td><td>SQL schema to create database table(s)</td></crow>
                    <crow><td>src/bugs/jdo/template/README</td><td>Test instructions</td></crow>
				</ctable>
				
				<p>To create you own bug report, please copy '<tt>template</tt>' to e.g. <tt>bug1820</tt>, assuming
				   that 1820 is the number assigned to your BugZilla problem report). Subsequently, please
				   amend the files provided to match your own requirements. After you have consolidated your 
				   changes, the original directory structure in src/bugs could look as follows:</p>
				   
				<ctable cellpadding="3">	
                    <crow><td><i>src</i></td><td>Source code</td></crow>
                    <crow><td><i>src/bugs</i></td><td>Common root for bug reports</td></crow>
                    <crow><td><i>src/bugs/jdo</i></td><td>Common root for JDO bug reports</td></crow>
                    <crow><td>src/bugs/jdo/template</td><td>Patch template</td></crow>
                    <crow><td>src/bugs/jdo/template/TestTemplate.java</td><td>JUnit test case.</td></crow>
                    <crow><td>src/bugs/jdo/template/EntityOne.java</td><td>Entity required by the test case</td></crow>
                    <crow><td>src/bugs/jdo/template/jdo-conf.xml</td><td>Castor JDO configuration</td></crow>
                    <crow><td>src/bugs/jdo/template/mapping.xml</td><td>Castor mapping file</td></crow>
                    <crow><td>src/bugs/jdo/template/create.sql</td><td>SQL schema to create database table(s)</td></crow>
                    <crow><td>src/bugs/jdo/template/README</td><td>Test instructions</td></crow>
                    <crow><td>src/bugs/jdo/bug1820</td><td>Your specific bug (as per BugZilla bug number)</td></crow>
                    <crow><td>src/bugs/jdo/bug1820/TestCase.java</td><td>JUnit test case.</td></crow>
                    <crow><td>src/bugs/jdo/bug1820/Entity1.java</td><td>Entity required</td></crow>
                    <crow><td>src/bugs/jdo/bug1820/Entity2.java</td><td>Entity required</td></crow>
                    <crow><td>src/bugs/jdo/bug1820/jdo-conf.xml</td><td>Castor JDO configuration</td></crow>
                    <crow><td>src/bugs/jdo/bug1820/mapping.xml</td><td>Castor mapping file</td></crow>
                    <crow><td>src/bugs/jdo/bug1820/schema.sql</td><td>SQL schema to create database table(s)</td></crow>
                    <crow><td>src/bugs/jdo/bug1820/README</td><td>Test instructions</td></crow>
				</ctable>
				
				</section>
			
			<section title="Add your test case to the master test suite">
				
				<p>Once you have successfully executed your JUnit test case, please add this test
				   to the master test suite available in src/bugs/AllTests.java as follows. To add 
				   a test to this suite, please duplicate the line</p>
				
				<code>suite.addTestSuite(template.TestTemplate.class);</code> 
				
				<p>and replace the term 'jdo.template.TestTemplate.class' with 'jdo.bug1820.TestCase'.</p>
				
				<p>This will allow us to run all tests related to all open bugs in one go by executing
				   just this test suite.</p>
				   
			</section>
			
			<section title="Creating the patch">
				<p>As explained in <link>cvs.html</link>, we ask you to submit your code
                   changes in the form of a unified patch by attaching it to the relevant
                   bug report.</p>
				   
				<p>To create a <b>unified</b> patch for submission, you can either use
                   the command line SVN client (which you find instructions to download
                   for at <link>http://subversion.tigris.org/</link> or any IDE that
                   offers support or SVN (such as Eclipse with Subclipse plugin)</p>
				   
				<p>In any case, please note that we are trying to standardize on the use
                   of <b>unified</b> patches only, and that you should <b>always</b>
                   update your code (against the SVN repository) before creating the
                   patch. If you have never used SVN before, there will be ways to
                   convince us to accept e.g. a Zip file includig your changes.</p>
			</section>
			
			<section title="References">
				<p>Whilst we cannot assume that every Castor (JDO) user is an expert in
                   the use of JUnit, we do believe that they are quite easy to get
                   acquainted with. As a starting point, please find below some
                   references:</p>
	
				<ul>
					<li><a href="http://www.junit.org/">JUnit</a> - A well-known
                        framework for writing integration-level and functional tests.</li>
					<li><a href="http://subversion.tigris.org/">SVN Home</a> - many useful
                        SVN related items</li>
				</ul>
			</section>
		
		</section>
	</body>
</document>